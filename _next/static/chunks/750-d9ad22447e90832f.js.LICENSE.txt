/*
     * The Decimal constructor and exported function.
     * Return a new Decimal instance.
     *
     * value {number|string|Decimal} A numeric value.
     *
     */

/*
     * The `isNumber` check is needed because the user could also provide strings like "dataMin" via the domain props.
     * In such case, we have to compute the domain from the data.
     */

/*
     * This is a hack to short-circuit the domain creation here to enhance performance.
     * Usually, the data is used to determine the domain, but when the user specifies
     * a domain upfront (via props), there is no need to calculate the domain start and end,
     * which is very expensive for a larger amount of data.
     * The only thing that would prohibit short-circuiting is when the user doesn't allow data overflow,
     * because the axis is supposed to ignore the specified domain that way.
     */

/*
   *  absoluteValue                       abs
   *  comparedTo                          cmp
   *  decimalPlaces                       dp
   *  dividedBy                           div
   *  dividedToIntegerBy                  idiv
   *  equals                              eq
   *  exponent
   *  greaterThan                         gt
   *  greaterThanOrEqualTo                gte
   *  isInteger                           isint
   *  isNegative                          isneg
   *  isPositive                          ispos
   *  isZero
   *  lessThan                            lt
   *  lessThanOrEqualTo                   lte
   *  logarithm                           log
   *  minus                               sub
   *  modulo                              mod
   *  naturalExponential                  exp
   *  naturalLogarithm                    ln
   *  negated                             neg
   *  plus                                add
   *  precision                           sd
   *  squareRoot                          sqrt
   *  times                               mul
   *  toDecimalPlaces                     todp
   *  toExponential
   *  toFixed
   *  toInteger                           toint
   *  toNumber
   *  toPower                             pow
   *  toPrecision
   *  toSignificantDigits                 tosd
   *  toString
   *  valueOf                             val
   */

/*
   *  add                 P.minus, P.plus
   *  checkInt32          P.todp, P.toExponential, P.toFixed, P.toPrecision, P.tosd
   *  digitsToString      P.log, P.sqrt, P.pow, toString, exp, ln
   *  divide              P.div, P.idiv, P.log, P.mod, P.sqrt, exp, ln
   *  exp                 P.exp, P.pow
   *  getBase10Exponent   P.exponent, P.sd, P.toint, P.sqrt, P.todp, P.toFixed, P.toPrecision,
   *                      P.toString, divide, round, toString, exp, ln
   *  getLn10             P.log, ln
   *  getZeroString       digitsToString, toString
   *  ln                  P.log, P.ln, P.pow, exp
   *  parseDecimal        Decimal
   *  round               P.abs, P.idiv, P.log, P.minus, P.mod, P.neg, P.plus, P.toint, P.sqrt,
   *                      P.times, P.todp, P.toExponential, P.toFixed, P.pow, P.toPrecision, P.tosd,
   *                      divide, getLn10, exp, ln
   *  subtract            P.minus, P.plus
   *  toString            P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf
   *  truncate            P.pow
   *
   *  Throws:             P.log, P.mod, P.sd, P.sqrt, P.pow,  checkInt32, divide, round,
   *                      getLn10, exp, ln, parseDecimal, Decimal, config
   */

/*
   *  clone
   *  config/set
   */

/*
   *  decimal.js-light v2.5.1
   *  An arbitrary-precision Decimal type for JavaScript.
   *  https://github.com/MikeMcl/decimal.js-light
   *  Copyright (c) 2020 Michael Mclaughlin <M8ch88l@gmail.com>
   *  MIT Expat Licence
   */

/*
   * Configure global settings for a Decimal constructor.
   *
   * `obj` is an object with one or more of the following properties,
   *
   *   precision  {number}
   *   rounding   {number}
   *   toExpNeg   {number}
   *   toExpPos   {number}
   *
   * E.g. Decimal.config({ precision: 20, rounding: 4 })
   *
   */

/*
   * Create and return a Decimal constructor with the same configuration properties as this Decimal
   * constructor.
   *
   */

/*
   * Parse the value of a new Decimal `x` from string `str`.
   */

/*
   * Return
   *   1    if the value of this Decimal is greater than the value of `y`,
   *  -1    if the value of this Decimal is less than the value of `y`,
   *   0    if they have the same value
   *
   */

/*
   * Return a new Decimal whose value is the absolute value of this Decimal.
   *
   */

/*
   * Return a new Decimal whose value is the integer part of dividing the value of this Decimal
   * by the value of `y`, truncated to `precision` significant digits.
   *
   */

/*
   * Return a new Decimal whose value is the natural exponential of `x` truncated to `sd`
   * significant digits.
   *
   * Taylor/Maclaurin series.
   *
   * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...
   *
   * Argument reduction:
   *   Repeat x = x / 32, k += 5, until |x| < 0.1
   *   exp(x) = exp(x / 2^k)^(2^k)
   *
   * Previously, the argument was initially reduced by
   * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)
   * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was
   * found to be slower than just dividing repeatedly by 32 as above.
   *
   * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)
   *
   *  exp(x) is non-terminating for any finite, non-zero x.
   *
   */

/*
   * Return a new Decimal whose value is the natural exponential of the value of this Decimal,
   * i.e. the base e raised to the power the value of this Decimal, truncated to `precision`
   * significant digits.
   *
   */

/*
   * Return a new Decimal whose value is the natural logarithm of `x` truncated to `sd` significant
   * digits.
   *
   *  ln(n) is non-terminating (n != 1)
   *
   */

/*
   * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,
   * truncated to `precision` significant digits.
   *
   */

/*
   * Return a new Decimal whose value is the square root of this Decimal, truncated to `precision`
   * significant digits.
   *
   */

/*
   * Return a new Decimal whose value is the value of this Decimal divided by `y`, truncated to
   * `precision` significant digits.
   *
   */

/*
   * Return a new Decimal whose value is the value of this Decimal minus `y`, truncated to
   * `precision` significant digits.
   *
   */

/*
   * Return a new Decimal whose value is the value of this Decimal modulo `y`, truncated to
   * `precision` significant digits.
   *
   */

/*
   * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by
   * -1.
   *
   */

/*
   * Return a new Decimal whose value is the value of this Decimal plus `y`, truncated to
   * `precision` significant digits.
   *
   */

/*
   * Return a new Decimal whose value is the value of this Decimal raised to the power `y`,
   * truncated to `precision` significant digits.
   *
   * For non-integer or very large exponents pow(x, y) is calculated using
   *
   *   x^y = exp(y*ln(x))
   *
   * The maximum error is 1 ulp (unit in last place).
   *
   * y {number|string|Decimal} The power to which to raise this Decimal.
   *
   */

/*
   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`
   * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.
   *
   * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.
   *
   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.
   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
   *
   */

/*
   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`
   * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if
   * omitted.
   *
   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.
   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
   *
   */

/*
   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using
   * rounding mode `rounding`.
   *
   */

/*
   * Return a new Decimal whose value is the value of this Decimal times `y`, truncated to
   * `precision` significant digits.
   *
   */

/*
   * Return a string representing the value of this Decimal in exponential notation rounded to
   * `dp` fixed decimal places using rounding mode `rounding`.
   *
   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.
   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
   *
   */

/*
   * Return a string representing the value of this Decimal in normal (fixed-point) notation to
   * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is
   * omitted.
   *
   * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.
   *
   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.
   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
   *
   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.
   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.
   * (-0).toFixed(3) is '0.000'.
   * (-0.5).toFixed(0) is '-0'.
   *
   */

/*
   * Return a string representing the value of this Decimal rounded to `sd` significant digits
   * using rounding mode `rounding`.
   *
   * Return exponential notation if `sd` is less than the number of digits necessary to represent
   * the integer part of the value in normal notation.
   *
   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.
   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
   *
   */

/*
   * Return a string representing the value of this Decimal.
   *
   * Return exponential notation if this Decimal has a positive exponent equal to or greater than
   * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.
   *
   */

/*
   * Return the (base 10) exponent value of this Decimal (this.e is the base 10000000 exponent).
   *
   */

/*
   * Return the logarithm of the value of this Decimal to the specified base, truncated to
   * `precision` significant digits.
   *
   * If no base is specified, return log[10](x).
   *
   * log[base](x) = ln(x) / ln(base)
   *
   * The maximum error of the result is 1 ulp (unit in the last place).
   *
   * [base] {number|string|Decimal} The base of the logarithm.
   *
   */

/*
   * Return the number of decimal places of the value of this Decimal.
   *
   */

/*
   * Return the number of significant digits of the value of this Decimal.
   *
   * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.
   *
   */

/*
   * Return the value of this Decimal converted to a number primitive.
   *
   */

/*
   * Return true if the value of this Decimal is 0, otherwise return false.
   *
   */

/*
   * Return true if the value of this Decimal is an integer, otherwise return false.
   *
   */

/*
   * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.
   *
   */

/*
   * Return true if the value of this Decimal is greater than or equal to the value of `y`,
   * otherwise return false.
   *
   */

/*
   * Return true if the value of this Decimal is greater than the value of `y`, otherwise return
   * false.
   *
   */

/*
   * Return true if the value of this Decimal is less than `y`, otherwise return false.
   *
   */

/*
   * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.
   *
   */

/*
   * Return true if the value of this Decimal is negative, otherwise return false.
   *
   */

/*
   * Return true if the value of this Decimal is positive, otherwise return false.
   *
   */

/*
   * Round `x` to `sd` significant digits, using rounding mode `rm` if present (truncate otherwise).
   */

/*
  Add amplitude to the existing amplitude for state in the amplitudes object
  Keep the object sparse by deleting values close to zero.
 */

/*
 * Create a new array of children excluding the ones matched the type
 */

/*
 * Cursor is the background, or a highlight,
 * that shows when user mouses over or activates
 * an area.
 *
 * It usually shows together with a tooltip
 * to emphasise which part of the chart does the tooltip refer to.
 */

/*
 * Find and return all matched children by type.
 * `type` must be a React.ComponentType
 */

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */

/*
 * Return the first matched child by type, return null otherwise.
 * `type` must be a React.ComponentType
 */

/*
 * removed 'type' SVGElementPropKey because we do not currently use any SVG elements
 * that can use it and it conflicts with the recharts prop 'type'
 * https://github.com/recharts/recharts/pull/3327
 * https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/type
 */

/*
 TODO v6: remove
 Conditionally apply a workaround for the CSS transition bug in Safari 15.4 / WebKit browsers.
 */

/*
given a DOM element, return the list of all scroll parents, up the list of ancesors
until we get to the top window object. This list is what we attach scroll listeners
to, because if any of these parent elements scroll, we'll need to re-calculate the
reference element's position.
*/

/*
object-assign
(c) Sindre Sorhus
@license MIT
*/

/* #__PURE__ */

/* */

/* . */

/* .Bar */

/* .Curve */

/* .DndContext */

/* .Dot */

/* .ErrorBar */

/* .EventKeys */

/* .FilteredElementKeyMap */

/* .Global */

/* .IS_REACT_LEGACY */

/* .Label */

/* .LabelList */

/* .Layer */

/* .Legend */

/* .RADIAN */

/* .SVGElementPropKeys */

/* .Text */

/* .UNDEFINED */

/* .XAxis */

/* .YAxis */

/* .adaptEventHandlers */

/* .checkDomainOfScale */

/* .createLabeledScales */

/* .filterProps */

/* .findAllByType */

/* .findChildByType */

/* .formatAxisMap */

/* .generateCategoricalChart */

/* .getBandSizeOfAxis */

/* .getCateCoordinateOfLine */

/* .getDialogTitleUtilityClass */

/* .getDisplayName */

/* .getMainColorOfGraphicItem */

/* .getPercentValue */

/* .getTicksOfScale */

/* .getTimestamp */

/* .getTransitionProps */

/* .getValueByDataKey */

/* .ifOverflowMatches */

/* .insertStyles */

/* .interpolateNumber */

/* .invariant */

/* .isDotProps */

/* .isHostComponent */

/* .isNumOrStr */

/* .isNumber */

/* .isPercent */

/* .mathSign */

/* .mergeObjects */

/* .parseScale */

/* .polarToCartesian */

/* .rectWithCoords */

/* .reflow */

/* .serialize */

/* .serializeStyles */

/* .shallowEqual */

/* .uniqueId */

/* .useInsertionEffectWithLayoutFallback */

/* .useIsomorphicLayoutEffect */

/* .useSWRConfig */

/* .warn */

/* .withMiddleware */

/* 0 */

/* 1 */

/* 10 */

/* 11 */

/* 12 */

/* 13 */

/* 14 */

/* 15 */

/* 16 */

/* 17 */

/* 18 */

/* 19 */

/* 2 */

/* 20 */

/* 21 */

/* 22 */

/* 23 */

/* 3 */

/* 4 */

/* 5 */

/* 6 */

/* 7 */

/* 8 */

/* 9 */

/* = width / sqrt(2) = (length of the hypotenuse) */

/* Bar */

/* Built-in method references for those with the same name as other `lodash` methods. */

/* Built-in method references that are verified to be native. */

/* Cell */

/* Curve */

/* DndContext */

/* Dot */

/* ErrorBar */

/* From FvD 13.37, CSS Color Module Level 3 */

/* Global */

/* InputBaseComponent */

/* InputBaseRoot */

/* Label */

/* LabelList */

/* Layer */

/* Legend */

/* Line */

/* Node.js helper references. */

/* PopoverPaper */

/* Portal */

/* Rectangle */

/* ReferenceLine */

/* Scatter */

/* Sector */

/* Shape */

/* Since getSize() is expensive (it reads the ticks' size from the DOM), we do this check first to avoid calculating
   * the tick's size. */

/* Surface */

/* Symbols */

/* TODO v6: Change component structure. It will help in avoiding the complicated React.cloneElement API added in SliderValueLabel component. Should be: Thumb -> Input, ValueLabel. Follow Joy UI's Slider structure. */

/* Text */

/* The chart can be categorical and have the domain specified in numbers
       * we still need to calculate the categorical domain
       * TODO: refactor this more
       */

/* Tooltip */

/* TouchRipple is only needed client-side, x2 boost on the server. */

/* XAxis */

/* YAxis */

/* Z+1 */

/* ZAxis */

/* ["default"] */

/* __next_internal_client_entry_do_not_use__  cjs */

/* adaptEventHandlers */

/* adaptEventsOfChild */

/* alpha */

/* appendErrors */

/* appendOffsetOfLegend */

/* appendOwnerState */

/* binding */

/* calculateActiveTickIndex */

/* combineEventHandlers */

/* createLabeledScales */

/* darken */

/* default */

/* eslint no-console: 0 */

/* eslint-disable consistent-return, jsx-a11y/no-noninteractive-tabindex */

/* eslint-disable no-proto */

/* eslint-disable no-restricted-globals, @typescript-eslint/ban-ts-comment, @typescript-eslint/no-unused-vars, @typescript-eslint/no-non-null-assertion */

/* eslint-disable no-restricted-syntax */

/* eslint-disable no-underscore-dangle */

/* eslint-disable no-unused-expressions */

/* eslint-disable no-unused-vars */

/* eslint-disable prefer-destructuring */

/* eslint-disable prefer-destructuring, no-param-reassign */

/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */

/* eslint-disable-next-line @typescript-eslint/no-this-alias */

/* eslint-disable-next-line class-methods-use-this */

/* eslint-enable no-unused-expressions */

/* eslint-enable prefer-destructuring */

/* eslint-enable prefer-destructuring, no-param-reassign */

/* export default binding */

/* extractEventHandlers */

/* filterProps */

/* findAllByType */

/* findChildByType */

/* findEntryInArray */

/* findPositionOfBar */

/* formatAxisMap */

/* generateCategoricalChart */

/* get */

/* getActiveShapeIndexForTooltip */

/* getAngledRectangleWidth */

/* getAnyElementOfObject */

/* getBandSizeOfAxis */

/* getBarPosition */

/* getBarSizeList */

/* getBaseValueOfBar */

/* getCateCoordinateOfBar */

/* getCateCoordinateOfLine */

/* getCoordinatesOfGrid */

/* getDisplayName */

/* getDomainOfDataByKey */

/* getDomainOfItemsWithSameAxis */

/* getDomainOfStackGroups */

/* getInputBaseUtilityClass */

/* getLegendProps */

/* getLinearRegression */

/* getMainColorOfGraphicItem */

/* getOffset */

/* getPercentValue */

/* getReactEventByType */

/* getRegisteredStyles */

/* getStackGroupsByAxisId */

/* getStackedDataOfItem */

/* getStringSize */

/* getTicksOfAxis */

/* getToggleButtonUtilityClass */

/* getTooltipItem */

/* getUniqPayload */

/* getValueByDataKey */

/* global Symbol */

/* globals self */

/* harmony default export */

/* harmony export */

/* harmony import */

/* hasDuplicate */

/* ifOverflowMatches */

/* implicit */

/* inRangeOfSector */

/* initInterpolator */

/* initRange */

/* inputOverridesResolver */

/* insertStyles */

/* interpolateNumber */

/* invariant */

/* isCategoricalAxis */

/* isChildrenEqual */

/* isDotProps */

/* isFilled */

/* isFunnel */

/* isHostComponent */

/* isInRectangle */

/* isNumOrStr */

/* isNumber */

/* isPie */

/* isPlainObject */

/* isRef */

/* isScatter */

/* istanbul ignore next */

/* keyframes */

/* lighten */

/* mathSign */

/* module decorator */

/* n */

/* notranslate needed while Google Translate will not fix zero-width space issue */

/* o */

/* parseChildIndex */

/* parseDomainOfCategoryAxis */

/* parseErrorBarsOfAxis */

/* parseSpecifiedDomain */

/* point */

/* polarToCartesian */

/* provided dependency */

/* rectWithPoints */

/* reexport */

/* registerSource */

/* registerStyles */

/* registerTarget */

/* renderByOrder */

/* rootOverridesResolver */

/* rootShouldForwardProp */

/* serializeStyles */

/* set */

/* shallowEqual */

/* slotShouldForwardProp */

/* translateStyle */

/* truncateByDomain */

/* uniqueId */

/* unused harmony export clsx */

/* unused harmony export getEndPoints */

/* unused harmony export getStyleString */

/* unused harmony export slice */

/* unused harmony export systemDefaultTheme */

/* unused harmony export teardown */

/* unused harmony exports BRAND, DIRTY, EMPTY_PATH, INVALID, NEVER, OK, ParseStatus, Schema, ZodAny, ZodArray, ZodBigInt, ZodBoolean, ZodBranded, ZodCatch, ZodDate, ZodDefault, ZodDiscriminatedUnion, ZodEffects, ZodEnum, ZodError, ZodFirstPartyTypeKind, ZodFunction, ZodIntersection, ZodIssueCode, ZodLazy, ZodLiteral, ZodMap, ZodNaN, ZodNativeEnum, ZodNever, ZodNull, ZodNullable, ZodNumber, ZodObject, ZodOptional, ZodParsedType, ZodPipeline, ZodPromise, ZodReadonly, ZodRecord, ZodSchema, ZodSet, ZodString, ZodSymbol, ZodTransformer, ZodTuple, ZodType, ZodUndefined, ZodUnion, ZodUnknown, ZodVoid, addIssueToContext, any, array, bigint, boolean, coerce, custom, date, defaultErrorMap, discriminatedUnion, effect, function, getErrorMap, getParsedType, instanceof, intersection, isAborted, isAsync, isDirty, isValid, late, lazy, literal, makeIssue, map, nan, nativeEnum, never, null, nullable, objectUtil, oboolean, onumber, optional, ostring, pipeline, preprocess, promise, quotelessJson, set, setErrorMap, strictObject, symbol, transformer, tuple, undefined, union, unknown, util, void, z */

/* unused harmony exports ClassNames, createElement, css, jsx */

/* unused harmony exports Form, useController, useFieldArray, useFormState, useWatch */

/* unused harmony exports SCALE_TYPES, LEGEND_TYPES, TOOLTIP_TYPES, toArray, withoutType, isValidSpreadableProp, filterSvgElements, isSingleChildEqual */

/* unused harmony exports ScaleHelper, normalizeAngle */

/* unused harmony exports degreeToRadian, radianToDegree, getMaxRadius, formatAxisMap, distanceBetweenPoints, getAngleOfPoint, formatAngleOfSector */

/* unused harmony exports hasValue, isAdornedStart */

/* unused harmony exports random, customRandom, customAlphabet */

/* unused reexport */

/* useCollectedProps */

/* useDragDropManager */

/* useInsertionEffectAlwaysWithSyncFallback */

/* useIsomorphicLayoutEffect */

/* useOptionalFactory */

/* useSlotProps */

/* validateWidthHeight */

/* warn */

/* withPath */

/* wrapConnectorHooks */

/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

/*! decimal.js-light v2.5.1 https://github.com/MikeMcl/decimal.js-light/LICENCE */

/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */

/*#__PURE__*/

/**
		 * If the global context was used to store the DND context
		 * then where theres no more references to it we should
		 * clean it up to avoid memory leaks
		 */

/**
	 * Generate profiling statistics for the HTML5Backend.
	 */

/**
	 * Get the root element to use for event subscriptions
	 */

/**
             * We hit this block if consumer uses a Tooltip without XAxis and/or YAxis.
             * In which case, this.state.activeTooltipIndex never gets set
             * because the mouse events that trigger that value getting set never get trigged without the axis components.
             *
             * An example usage case is a FunnelChart
             */

/**
         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.
         * If you want to pass through unknown properties, use `.passthrough()` instead.
         */

/**
         * @deprecated Use `.extend` instead
         *  */

/**
         * if the value coming from `getComposedData` is an array then this is a stacked bar chart.
         * arr[1] represents end value of the bar since the data is in the form of [startValue, endValue].
         * */

/**
         * tell the user in dev mode that their configuration is incorrect if we cannot find a match between
         * axisId on the chart and axisId on the axis. zAxis does not get passed in the map for ComposedChart,
         * leave it out of the check for now.
         */

/**
       * Draw Tooltip
       * @return {ReactElement}  The instance of Tooltip
       */

/**
       * Draw axis
       * @param {Object} axisOptions The options of axis
       * @param {Object} element      The axis element
       * @param {String} displayName  The display name of axis
       * @param {Number} index        The index of element
       * @return {ReactElement}       The instance of x-axes
       */

/**
       * Draw grid
       * @param  {ReactElement} element the grid item
       * @return {ReactElement} The instance of grid
       */

/**
       * Draw legend
       * @return {ReactElement}            The instance of Legend
       */

/**
       * Get the information of mouse in chart, return null when the mouse is not in the chart
       * @param  {MousePointer} event    The event object
       * @return {Object}          Mouse data
       */

/**
       * The handler if mouse leaving chart
       * @param {Object} e Event object
       * @return {Null} no return
       */

/**
       * The handler of mouse entering a scatter
       * @param {Object} el The active scatter
       * @return {Object} no return
       */

/**
       * The handler of mouse entering chart
       * @param  {Object} e              Event object
       * @return {Null}                  null
       */

/**
       * The handler of mouse leaving a scatter
       * @return {Object} no return
       */

/**
       * The handler of mouse moving in chart
       * @param  {React.MouseEvent} e        Event object
       * @return {void} no return
       */

/**
       * The minimal observable subscription method.
       * @param {Object} observer Any object that can be used as an observer.
       * The observer object should have a `next` method.
       * @returns {subscription} An object with an `unsubscribe` method that can
       * be used to unsubscribe the observable from the store, and prevent further
       * emission of values from the observable.
       */

/**
     * @deprecated
     */

/**
     * @deprecated Use z.string().min(1) instead.
     * @see {@link ZodString.min}
     */

/**
     * @param {KeyboardEvent} nativeEvent
     */

/**
     * Adds a new snackbar to the queue to be presented.
     * Returns generated or user defined key referencing the new snackbar or null
     */

/**
     * Calculate the coordinates of endpoints in ticks
     * @param  {Object} data The data of a simple tick
     * @return {Object} (x1, y1): The coordinate of endpoint close to tick text
     *  (x2, y2): The coordinate of endpoint close to axis
     */

/**
     * Close snackbar with the given key
     */

/**
     * Controlled系のための複数量子ビット操作
     */

/**
     * Draw horizontal grid stripes filled by colors
     * @param {Array} horizontalPoints either passed in as props or generated from function
     * @return {Group} Horizontal stripes
     */

/**
     * Draw items of legend
     * @return {ReactElement} Items
     */

/**
     * Draw the horizontal grid lines
     * @param {Array} horizontalPoints either passed in as props or generated from function
     * @return {Group} Horizontal lines
     */

/**
     * Draw vertical grid lines
     * @param {Array} verticalPoints either passed in as props or generated from function
     * @return {Group} Vertical lines
     */

/**
     * Draw vertical grid stripes filled by colors
     * @param {Array} verticalPoints either passed in as props or generated from function
     * @return {Group} Vertical stripes
     */

/**
     * Fixes: https://github.com/recharts/recharts/issues/3669
     * Defaulting to chartData below to fix an edge case where the tooltip does not include data from all charts
     * when a separate dataset is passed to chart prop data and specified on Line/Area/etc prop data
     */

/**
     * Hide a snackbar after its timeout.
     */

/**
     * Prior to zod@1.0.12 there was a bug in the
     * inferred type of merged objects. Please
     * upgrade if you are experiencing issues.
     */

/**
     * QuantumStateをマージし、合成系を生成する
     * マージされた後、 新しく生成されたQuantumStateとQubitを紐づけて再登録する
     * todo: argsを配列にしてもよいか検討
     */

/**
     * Qubitが新しく生成されたとき、Qubitから呼ばれる
     * 生成されたQubitに紐づく新しいQuantumStateを生成し、Core管理下に加える
     */

/**
     * Qubitの内部状態ベクトルを統合する
     *
     * 各Qubitの状態ベクトルが独立である場合は配列順にテンソル積される
     * 合成済みの系が含まれる場合、合成順はその系を1まとめにして扱う
     *
     * @param qubits 状態ベクトルを統合するQubit配列
     */

/**
     * Reducer: Display items (notifications) in the queue if there's space for them.
     */

/**
     * Reducer: Display snack if there's space for it. Otherwise, immediately
     * begin dismissing the oldest message to start showing the new one.
     */

/**
     * Reducer: Hide oldest snackbar on the screen because there exists a new one which we have to display.
     * (ignoring the one with 'persist' flag. i.e. explicitly told by user not to get dismissed).
     *
     * Note 1: If there is already a message leaving the screen, no new messages are dismissed.
     * Note 2: If the oldest message has not yet entered the screen, only a request to close the
     *         snackbar is made. Once it entered the screen, it will be immediately dismissed.
     */

/**
     * Render the path of icon
     * @param {Object} data Data of each legend item
     * @return {String} Path element
     */

/**
     * Set the entered state of the snackbar with the given key.
     */

/**
     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.
     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must
     * have a different value for each object in the union.
     * @param discriminator the name of the discriminator property
     * @param types an array of object schemas
     * @param params
     */

/**
     * Toffoli takes one or more control bits (conventionally two) and one target bit.
     */

/**
     * When we set open attribute of a snackbar to false (i.e. after we hide a snackbar),
     * it leaves the screen and immediately after leaving animation is done, this method
     * gets called. We remove the hidden snackbar from state and then display notifications
     * waiting in the queue (if any). If after this process the queue is not empty, the
     * oldest message is dismissed.
     */

/**
     * cnot演算を適用する
     * 標的量子ビットには呼び出し元のQubitが指定される
     *
     * @param controlQubit 制御量子ビット
     */

/**
     * compare the value of the two objects and return true if they are equivalent in values
     */

/**
     * controlled x演算を適用する
     * 標的量子ビットには呼び出し元のQubitが指定される
     *
     * @param controlQubit 制御量子ビット
     */

/**
     * controlled y演算を適用する
     * 標的量子ビットには呼び出し元のQubitが指定される
     *
     * @param controlQubit 制御量子ビット
     */

/**
     * controlled z演算を適用する
     * 標的量子ビットには呼び出し元のQubitが指定される
     *
     * @param controlQubit 制御量子ビット
     */

/**
     * hadamard演算を適用する
     */

/**
     * render the ticks
     * @param {Array} ticks The ticks to actually render (overrides what was passed in props)
     * @param {string} fontSize Fontsize to consider for tick spacing
     * @param {string} letterSpacing Letterspacing to consider for tick spacing
     * @return {ReactComponent} renderedTicks
     */

/**
     * s演算を適用する
     */

/**
     * t演算を適用する
     */

/**
     * x演算を適用する
     */

/**
     * y演算を適用する
     */

/**
     * z演算を適用する
     */

/**
     * 任意の角度でr演算を適用する
     *
     * @param angle 回転角。radianで与えられ、0 ~ 2*Math.PI
     */

/**
     * 任意の角度でx軸回りの回転を適用する
     *
     * @param angle 回転角
     */

/**
     * 任意の角度でy軸回りの回転を適用する
     *
     * @param angle 回転角
     */

/**
     * 任意の角度でz軸回りの回転を適用する
     *
     * @param angle 回転角
     */

/**
     * 単一量子ビットのZ基底測定
     */

/**
     * 単一量子ビットの量子操作
     */

/**
     * 引数のQubitを持つQubitQuantumStateMapElementを返す
     */

/**
     * 量子ビットのダンプを返す
     * 文字列の形式はQuantumStateの実装によって不定であり、 ライブラリユーザはこのメソッドが返す書式に依存するべきではない
     */

/**
     * 量子ビットをZ基底で測定する
     * 返り値には0または1状態の測定結果が入る
     */

/**
   * @param {React.SyntheticEvent | Event} event
   */

/**
   * Add to results, special solutions corresponding to the specified non-pivot column colIndex.
   */

/**
   * Adds a change listener. It will be called any time an action is dispatched,
   * and some part of the state tree may potentially have changed. You may then
   * call `getState()` to read the current state tree inside the callback.
   *
   * You may call `dispatch()` from a change listener, with the following
   * caveats:
   *
   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
   * If you subscribe or unsubscribe while the listeners are being invoked, this
   * will not have any effect on the `dispatch()` that is currently in progress.
   * However, the next `dispatch()` call, whether nested or not, will use a more
   * recent snapshot of the subscription list.
   *
   * 2. The listener should not expect to see all state changes, as the state
   * might have been updated multiple times during a nested `dispatch()` before
   * the listener is called. It is, however, guaranteed that all subscribers
   * registered before the `dispatch()` started will be called with the latest
   * state by the time it exits.
   *
   * @param {Function} listener A callback to be invoked on every dispatch.
   * @returns {Function} A function to remove this change listener.
   */

/**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

/**
   * Dispatches an action. It is the only way to trigger a state change.
   *
   * The `reducer` function, used to create the store, will be called with the
   * current state tree and the given `action`. Its return value will
   * be considered the **next** state of the tree, and the change listeners
   * will be notified.
   *
   * The base implementation only supports plain object actions. If you want to
   * dispatch a Promise, an Observable, a thunk, or something else, you need to
   * wrap your store creating function into the corresponding middleware. For
   * example, see the documentation for the `redux-thunk` package. Even the
   * middleware will eventually dispatch plain object actions using this method.
   *
   * @param {Object} action A plain object representing “what changed”. It is
   * a good idea to keep actions serializable so you can record and replay user
   * sessions, or use the time travelling `redux-devtools`. An action must have
   * a `type` property which may not be `undefined`. It is a good idea to use
   * string constants for action types.
   *
   * @returns {Object} For convenience, the same action object you dispatched.
   *
   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
   * return something else (for example, a Promise you can await).
   */

/**
   * Find the special solutions to the mod-2 equation Ax=0 for matrix a.
   */

/**
   * If the svg element type is explicitly included, check against the filtered element key map
   * to determine if there are attributes that should only exist on that element type.
   * @todo Add an internal cjs version of https://github.com/wooorm/svg-element-attributes for full coverage.
   */

/**
   * Interoperability point for observable/reactive libraries.
   * @returns {observable} A minimal observable of state changes.
   * For more information, see the observable proposal:
   * https://github.com/tc39/proposal-observable
   */

/**
   * Pause the timer when the user is interacting with the Snackbar
   * or when the user hide the window.
   */

/**
   * Props are blindly spread onto SVG elements. This loop filters out properties that we don't want to spread.
   * Items filtered out are as follows:
   *   - functions in properties that are SVG attributes (functions are included when includeEvents is true)
   *   - props that are SVG attributes but don't matched the passed svgElementType
   *   - any prop that is not in SVGElementPropKeys (or in EventKeys if includeEvents is true)
   */

/**
   * Reads the state tree managed by the store.
   *
   * @returns {any} The current state tree of your application.
   */

/**
   * Reduce 'a' to reduced row echelon form,
   * and keep track of which columns are pivot columns in pivotColumnIndexes.
   */

/**
   * Replaces the reducer currently used by the store to calculate the state.
   *
   * You might need this if your app implements code splitting and you want to
   * load some of the reducers dynamically. You might also need this if you
   * implement a hot reloading mechanism for Redux.
   *
   * @param {Function} nextReducer The reducer for the store to use instead.
   * @returns {void}
   */

/**
   * Restart the timer when the user is no longer interacting with the Snackbar
   * or when the window is shown back.
   */

/**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */

/**
   * Should be called if a blur event is fired
   */

/**
   * The `<TransitionGroup>` component manages a set of transition components
   * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition
   * components, `<TransitionGroup>` is a state machine for managing the mounting
   * and unmounting of components over time.
   *
   * Consider the example below. As items are removed or added to the TodoList the
   * `in` prop is toggled automatically by the `<TransitionGroup>`.
   *
   * Note that `<TransitionGroup>`  does not define any animation behavior!
   * Exactly _how_ a list item animates is up to the individual transition
   * component. This means you can mix and match animations across different list
   * items.
   */

/**
   * This makes a shallow copy of currentListeners so we can use
   * nextListeners as a temporary list while dispatching.
   *
   * This prevents any bugs around consumers calling
   * subscribe/unsubscribe in the middle of a dispatch.
   */

/**
   * This will create a new function if the ref props change and are defined.
   * This means react will call the old forkRef with `null` and the new forkRef
   * with the ref. Cleanup naturally emerges from this behavior.
   */

/**
   * This will create a new function if the refs passed to this hook change and are all defined.
   * This means react will call the old forkRef with `null` and the new forkRef
   * with the ref. Cleanup naturally emerges from this behavior.
   */

/**
   * Try to make row pivotRowIndex / column colIndex a pivot
   * swapping rows if necessary.
   */

/**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */

/**
   * Zero out the values above and below the pivot (using mod 2 arithmetic).
   */

/**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */

/**
   * placement initialized from prop but can change during lifetime if modifiers.flip.
   * modifiers.flip is essentially a flip for controlled/uncontrolled behavior
   */

/**
   * the index of the item should receive focus
   * in a `variant="selectedMenu"` it's the first `selected` item
   * otherwise it's the very first item.
   */

/**
  * toffoliゲート
  */

/**
 *
 * @example <div id={useId()} />
 * @param idOverride
 * @returns {string}
 */

/**
 *
 * @param monitor The monitor to collect state from
 * @param collect The collecting function
 * @param onUpdate A method to invoke when updates occur
 */

/**
 *
 * @param {GetActiveShapeIndexForTooltip} arg an object of incoming attributes from Tooltip
 * @returns {number}
 *
 * To handle possible duplicates in the data set,
 * match both the data value of the active item to a data value on a graph item,
 * and match the mouse coordinates of the active item to the coordinates of in a particular components shape data.
 * This assumes equal lengths of shape objects to data items.
 */

/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */

/**
 *
 * Demos:
 *
 * - [Modal](https://mui.com/base-ui/react-modal/#hook)
 *
 * API:
 *
 * - [useModal API](https://mui.com/base-ui/react-modal/hooks-api/#use-modal)
 */

/**
 *
 * Demos:
 *
 * - [Slider](https://mui.com/base-ui/react-slider/#hook)
 *
 * API:
 *
 * - [useSlider API](https://mui.com/base-ui/react-slider/hooks-api/#use-slider)
 */

/**
 *
 * Demos:
 *
 * - [Textarea Autosize](https://mui.com/base-ui/react-textarea-autosize/)
 * - [Textarea Autosize](https://mui.com/material-ui/react-textarea-autosize/)
 *
 * API:
 *
 * - [TextareaAutosize API](https://mui.com/base-ui/react-textarea-autosize/components-api/#textarea-autosize)
 */

/**
 * @deprecated
 *
 * **We recommend using the `configureStore` method
 * of the `@reduxjs/toolkit` package**, which replaces `createStore`.
 *
 * Redux Toolkit is our recommended approach for writing Redux logic today,
 * including store setup, reducers, data fetching, and more.
 *
 * **For more details, please read this Redux docs page:**
 * **https://redux.js.org/introduction/why-rtk-is-redux-today**
 *
 * `configureStore` from Redux Toolkit is an improved version of `createStore` that
 * simplifies setup and helps avoid common bugs.
 *
 * You should not be using the `redux` core package by itself today, except for learning purposes.
 * The `createStore` method from the core `redux` package will not be removed, but we encourage
 * all users to migrate to using Redux Toolkit for all Redux code.
 *
 * If you want to use `createStore` without this visual deprecation warning, use
 * the `legacy_createStore` import instead:
 *
 * `import { legacy_createStore as createStore} from 'redux'`
 *
 */

/**
 * @deprecated
 *
 * Pass `fatal` into the params object instead:
 *
 * ```ts
 * z.string().custom((val) => val.length > 5, { fatal: false })
 * ```
 *
 */

/**
 * @fileOverview Area
 */

/**
 * @fileOverview Brush
 */

/**
 * @fileOverview Cartesian Axis
 */

/**
 * @fileOverview Cartesian Grid
 */

/**
 * @fileOverview Cross
 */

/**
 * @fileOverview Curve
 */

/**
 * @fileOverview Default Legend Content
 */

/**
 * @fileOverview Default Tooltip Content
 */

/**
 * @fileOverview Dot
 */

/**
 * @fileOverview Layer
 */

/**
 * @fileOverview Legend
 */

/**
 * @fileOverview Line
 */

/**
 * @fileOverview Rectangle
 */

/**
 * @fileOverview Reference Dot
 */

/**
 * @fileOverview Reference Line
 */

/**
 * @fileOverview Render a group of bar
 */

/**
 * @fileOverview Render a group of error bar
 */

/**
 * @fileOverview Render a group of scatters
 */

/**
 * @fileOverview Sector
 */

/**
 * @fileOverview Surface
 */

/**
 * @fileOverview Tooltip
 */

/**
 * @fileOverview Wrapper component to make charts adapt to the size of parent * DOM
 */

/**
 * @fileOverview X Axis
 */

/**
 * @fileOverview Y Axis
 */

/**
 * @fileOverview Z Axis
 */

/**
 * @fileOverview calculate tick values of scale
 * @author xile611, arcthur
 * @date 2015-09-17
 */

/**
 * @fileOverview 一些公用的运算方法
 * @author xile611
 * @date 2015-09-17
 */

/**
 * @ignore - do not document.
 *
 * Proper state management for containers and the modals in those containers.
 * Simplified, but inspired by react-overlay's ModalManager class.
 * Used by the Modal to ensure proper styling of containers.
 */

/**
 * @ignore - do not document.
 * Builds the props to be passed into the slot of an unstyled component.
 * It merges the internal props of the component with the ones supplied by the user, allowing to customize the behavior.
 * If the slot component is not a host component, it also merges in the `ownerState`.
 *
 * @param parameters.getSlotProps - A function that returns the props to be passed to the slot component.
 */

/**
 * @ignore - internal component.
 */

/**
 * @ignore - internal hook.
 *
 * Wraps the `generateUtilityClass` function and controls how the classes are generated.
 * Currently it only affects whether the classes are applied or not.
 *
 * @returns Function to be called with the `generateUtilityClass` function specific to a component to generate the classes.
 */

/**
 * @license React
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * @param {any} obj The object to inspect.
 * @returns {boolean} True if the argument appears to be a plain object.
 */

/**
 * A React component that provides the React-DnD context
 */

/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */

/**
 * A hook to define and manually trigger remote mutations like POST, PUT, DELETE and PATCH use cases.
 *
 * @link https://swr.vercel.app/docs/mutation
 * @example
 * ```jsx
 * import useSWRMutation from 'swr/mutation'
 *
 * const {
 *   data,
 *   error,
 *   trigger,
 *   reset,
 *   isMutating
 * } = useSWRMutation(key, fetcher, options?)
 * ```
 */

/**
 * A hook to retrieve the DragDropManager from Context
 */

/**
 * A permanently displayed menu following https://www.w3.org/WAI/ARIA/apg/patterns/menu-button/.
 * It's exposed to help customization of the [`Menu`](/material-ui/api/menu/) component if you
 * use it separately you need to move focus into the component manually. Once
 * the focus is placed inside the component it is fully keyboard accessible.
 */

/**
 * A provider component that propagates the `useForm` methods to all children components via [React Context](https://reactjs.org/docs/context.html) API. To be used with {@link useFormContext}.
 *
 * @remarks
 * [API](https://react-hook-form.com/docs/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)
 *
 * @param props - all useForm methods
 *
 * @example
 * ```tsx
 * function App() {
 *   const methods = useForm();
 *   const onSubmit = data => console.log(data);
 *
 *   return (
 *     <FormProvider {...methods} >
 *       <form onSubmit={methods.handleSubmit(onSubmit)}>
 *         <NestedInput />
 *         <input type="submit" />
 *       </form>
 *     </FormProvider>
 *   );
 * }
 *
 *  function NestedInput() {
 *   const { register } = useFormContext(); // retrieve all hook methods
 *   return <input {...register("test")} />;
 * }
 * ```
 */

/**
 * A specialized version of `_.every` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if all elements pass the predicate check,
 *  else `false`.
 */

/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */

/**
 * A specialized version of `_.includes` for arrays without support for
 * specifying an index to search from.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */

/**
 * A specialized version of `_.indexOf` which performs strict equality
 * comparisons of values, i.e. `===`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */

/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */

/**
 * A specialized version of `_.memoize` which clears the memoized function's
 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
 *
 * @private
 * @param {Function} func The function to have its output memoized.
 * @returns {Function} Returns the new memoized function.
 */

/**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */

/**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */

/**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */

/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */

/**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */

/**
 * A specialized version of `baseProperty` which supports deep paths.
 *
 * @private
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 */

/**
 * A specialized version of `baseRest` which transforms the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @param {Function} transform The rest array transform.
 * @returns {Function} Returns the new function.
 */

/**
 * A specialized version of `matchesProperty` for source values suitable
 * for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */

/**
 * A version of `React.useLayoutEffect` that does not show a warning when server-side rendering.
 * This is useful for effects that are only needed for client-side rendering but not for SSR.
 *
 * Before you use this hook, make sure to read https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85
 * and confirm it doesn't apply to your use-case.
 */

/**
 * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js
 *
 * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes
 * during build.
 * @param {number} code
 */

/**
 * Add a listener for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @public
 */

/**
 * Add a listener for a given event.
 *
 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} context The context to invoke the listener with.
 * @param {Boolean} once Specify if the listener is a one-time listener.
 * @returns {EventEmitter}
 * @private
 */

/**
 * Add a one-time listener for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @public
 */

/**
 * Add keys, values of `defaultProps` that does not exist in `props`
 * @param {object} defaultProps
 * @param {object} props
 * @returns {object} resolved props
 */

/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */

/**
 * Allows to configure the components within to not apply any built-in classes.
 */

/**
 * An implementation of state with dependency-tracking.
 */

/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */

/**
 * Appends the ownerState object to the props, merging with the existing one if necessary.
 *
 * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node or undefined, `ownerState` is not applied.
 * @param otherProps Props of the element.
 * @param ownerState
 */

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */

/**
 * CSS hack to force a repaint
 */

/**
 * Calculate a interval of a minimum value and a maximum value
 *
 * @param  {Number} min       The minimum value
 * @param  {Number} max       The maximum value
 * @return {Array} An interval
 */

/**
 * Calculate the scale function, position, width, height of axes
 * @param  {Object} props     Latest props
 * @param  {Object} axisMap   The configuration of axes
 * @param  {Object} offset    The offset of main part in the svg element
 * @param  {String} axisType  The type of axes, x-axis or y-axis
 * @param  {String} chartName The name of chart
 * @return {Object} Configuration
 */

/**
 * Calculate the step
 *
 * @param  {Number}  min              The minimum value of an interval
 * @param  {Number}  max              The maximum value of an interval
 * @param  {Integer} tickCount        The count of ticks
 * @param  {Boolean} allowDecimals    Allow the ticks to be decimals or not
 * @param  {Number}  correctionFactor A correction factor
 * @return {Object}  The step, minimum value of ticks, maximum value of ticks
 */

/**
 * Calculate the step which is easy to understand between ticks, like 10, 20, 25
 *
 * @param  {Decimal} roughStep        The rough step calculated by deviding the
 * difference by the tickCount
 * @param  {Boolean} allowDecimals    Allow the ticks to be decimals or not
 * @param  {Integer} correctionFactor A correction factor
 * @return {Decimal} The step which is easy to understand between two ticks
 */

/**
 * Calculate the ticks of an interval, the count of ticks will be guraranteed
 *
 * @param  {Number}  min, max      min: The minimum value, max: The maximum value
 * @param  {Integer} tickCount     The count of ticks
 * @param  {Boolean} allowDecimals Allow the ticks to be decimals or not
 * @return {Array}   ticks
 */

/**
 * Calculate the ticks of an interval, the count of ticks won't be guraranteed
 *
 * @param  {Number}  min, max      min: The minimum value, max: The maximum value
 * @param  {Integer} tickCount     The count of ticks
 * @param  {Boolean} allowDecimals Allow the ticks to be decimals or not
 * @return {Array}   ticks
 */

/**
 * Calculate the ticks of an interval, the count of ticks won't be guraranteed,
 * but the domain will be guaranteed
 *
 * @param  {Number}  min, max      min: The minimum value, max: The maximum value
 * @param  {Integer} tickCount     The count of ticks
 * @param  {Boolean} allowDecimals Allow the ticks to be decimals or not
 * @return {Array}   ticks
 */

/**
 * Calls a task as soon as possible after returning, in its own event, with priority
 * over other events like animation, reflow, and repaint. An error thrown from an
 * event will not interrupt, nor even substantially slow down the processing of
 * other events, but will be rather postponed to a lower priority event.
 * @param {{call}} task A callable object, typically a function that takes no
 * arguments.
 */

/**
 * Calls each of the listeners registered for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Boolean} `true` if the event had listeners, else `false`.
 * @public
 */

/**
 * Casts `array` to a slice if it's needed.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {number} start The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the cast slice.
 */

/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {Object} [object] The object to query keys on.
 * @returns {Array} Returns the cast property path array.
 */

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */

/**
 * Checks if `n` is between `start` and up to, but not including, `end`. If
 * `end` is not specified, it's set to `start` with `start` then set to `0`.
 * If `start` is greater than `end` the params are swapped to support
 * negative ranges.
 *
 * @static
 * @memberOf _
 * @since 3.3.0
 * @category Number
 * @param {number} number The number to check.
 * @param {number} [start=0] The start of the range.
 * @param {number} end The end of the range.
 * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
 * @see _.range, _.rangeRight
 * @example
 *
 * _.inRange(3, 2, 4);
 * // => true
 *
 * _.inRange(4, 8);
 * // => true
 *
 * _.inRange(4, 2);
 * // => false
 *
 * _.inRange(2, 2);
 * // => false
 *
 * _.inRange(1.2, 2);
 * // => true
 *
 * _.inRange(5.2, 4);
 * // => false
 *
 * _.inRange(-3, -2, -6);
 * // => true
 */

/**
 * Checks if `path` exists on `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @param {Function} hasFunc The function to check properties.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 */

/**
 * Checks if `path` is a direct or inherited property of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.hasIn(object, 'a');
 * // => true
 *
 * _.hasIn(object, 'a.b');
 * // => true
 *
 * _.hasIn(object, ['a', 'b']);
 * // => true
 *
 * _.hasIn(object, 'b');
 * // => false
 */

/**
 * Checks if `predicate` returns truthy for **all** elements of `collection`.
 * Iteration is stopped once `predicate` returns falsey. The predicate is
 * invoked with three arguments: (value, index|key, collection).
 *
 * **Note:** This method returns `true` for
 * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
 * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
 * elements of empty collections.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {boolean} Returns `true` if all elements pass the predicate check,
 *  else `false`.
 * @example
 *
 * _.every([true, 1, null, 'yes'], Boolean);
 * // => false
 *
 * var users = [
 *   { 'user': 'barney', 'age': 36, 'active': false },
 *   { 'user': 'fred',   'age': 40, 'active': false }
 * ];
 *
 * // The `_.matches` iteratee shorthand.
 * _.every(users, { 'user': 'barney', 'active': false });
 * // => false
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.every(users, ['active', false]);
 * // => true
 *
 * // The `_.property` iteratee shorthand.
 * _.every(users, 'active');
 * // => false
 */

/**
 * Checks if `predicate` returns truthy for **any** element of `collection`.
 * Iteration is stopped once `predicate` returns truthy. The predicate is
 * invoked with three arguments: (value, index|key, collection).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 * @example
 *
 * _.some([null, 0, 'yes', false], Boolean);
 * // => true
 *
 * var users = [
 *   { 'user': 'barney', 'active': true },
 *   { 'user': 'fred',   'active': false }
 * ];
 *
 * // The `_.matches` iteratee shorthand.
 * _.some(users, { 'user': 'barney', 'active': false });
 * // => false
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.some(users, ['active', false]);
 * // => true
 *
 * // The `_.property` iteratee shorthand.
 * _.some(users, 'active');
 * // => true
 */

/**
 * Checks if `string` contains Unicode symbols.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {boolean} Returns `true` if a symbol is found, else `false`.
 */

/**
 * Checks if `value` is `NaN`.
 *
 * **Note:** This method is based on
 * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
 * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
 * `undefined` and other non-number values.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 * @example
 *
 * _.isNaN(NaN);
 * // => true
 *
 * _.isNaN(new Number(NaN));
 * // => true
 *
 * isNaN(undefined);
 * // => true
 *
 * _.isNaN(undefined);
 * // => false
 */

/**
 * Checks if `value` is `null` or `undefined`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
 * @example
 *
 * _.isNil(null);
 * // => true
 *
 * _.isNil(void 0);
 * // => true
 *
 * _.isNil(NaN);
 * // => false
 */

/**
 * Checks if `value` is a flattenable `arguments` object or array.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
 */

/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */

/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */

/**
 * Checks if `value` is classified as a `Number` primitive or object.
 *
 * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
 * classified as numbers, use the `_.isFinite` method.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a number, else `false`.
 * @example
 *
 * _.isNumber(3);
 * // => true
 *
 * _.isNumber(Number.MIN_VALUE);
 * // => true
 *
 * _.isNumber(Infinity);
 * // => true
 *
 * _.isNumber('3');
 * // => false
 */

/**
 * Checks if `value` is classified as a `String` primitive or object.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a string, else `false`.
 * @example
 *
 * _.isString('abc');
 * // => true
 *
 * _.isString(1);
 * // => false
 */

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */

/**
 * Checks if `value` is classified as a boolean primitive or object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
 * @example
 *
 * _.isBoolean(false);
 * // => true
 *
 * _.isBoolean(null);
 * // => false
 */

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */

/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */

/**
 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` if suitable for strict
 *  equality comparisons, else `false`.
 */

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */

/**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */

/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */

/**
 * Checks if the given arguments are from an iteratee call.
 *
 * @private
 * @param {*} value The potential iteratee value argument.
 * @param {*} index The potential iteratee index or key argument.
 * @param {*} object The potential iteratee object argument.
 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
 *  else `false`.
 */

/**
 * Clear event by name.
 *
 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
 * @param {(String|Symbol)} evt The Event name.
 * @private
 */

/**
 * Combine two comparators into a single comparators.
 */

/**
 * Compares values to sort them in ascending order.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {number} Returns the sort order indicator for `value`.
 */

/**
 * Component based on `useController` hook to work with controlled component.
 *
 * @remarks
 * [API](https://react-hook-form.com/docs/usecontroller/controller) • [Demo](https://codesandbox.io/s/react-hook-form-v6-controller-ts-jwyzw) • [Video](https://www.youtube.com/watch?v=N2UNk_UCVyA)
 *
 * @param props - the path name to the form field value, and validation rules.
 *
 * @returns provide field handler functions, field and form state.
 *
 * @example
 * ```tsx
 * function App() {
 *   const { control } = useForm<FormValues>({
 *     defaultValues: {
 *       test: ""
 *     }
 *   });
 *
 *   return (
 *     <form>
 *       <Controller
 *         control={control}
 *         name="test"
 *         render={({ field: { onChange, onBlur, value, ref }, formState, fieldState }) => (
 *           <>
 *             <input
 *               onChange={onChange} // send value to hook form
 *               onBlur={onBlur} // notify when input is touched
 *               value={value} // return updated value
 *               ref={ref} // set ref for focus management
 *             />
 *             <p>{formState.isSubmitted ? "submitted" : ""}</p>
 *             <p>{fieldState.isTouched ? "touched" : ""}</p>
 *           </>
 *         )}
 *       />
 *     </form>
 *   );
 * }
 * ```
 */

/**
 * Compose the data of each group
 * @param  {Object} xAxis   The configuration of x-axis
 * @param  {Object} yAxis   The configuration of y-axis
 * @param  {String} dataKey The unique key of a group
 * @return {Array}  Composed data
 */

/**
 * Compose the data of each group
 * @param {Object} props Props for the component
 * @param {Object} item        An instance of Bar
 * @param {Array} barPosition  The offset and size of each bar
 * @param {Object} xAxis       The configuration of x-axis
 * @param {Object} yAxis       The configuration of y-axis
 * @param {Array} stackedData  The stacked data of a bar item
 * @return{Array} Composed data
 */

/**
 * Compose the data of each group
 * @param {Object} props The props from the component
 * @param  {Object} xAxis   The configuration of x-axis
 * @param  {Object} yAxis   The configuration of y-axis
 * @param  {String} dataKey The unique key of a group
 * @return {Array}  Composed data
 */

/**
 * Computes the maximum value of `array`. If `array` is empty or falsey,
 * `undefined` is returned.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Math
 * @param {Array} array The array to iterate over.
 * @returns {*} Returns the maximum value.
 * @example
 *
 * _.max([4, 2, 8, 6]);
 * // => 8
 *
 * _.max([]);
 * // => undefined
 */

/**
 * Computes the minimum value of `array`. If `array` is empty or falsey,
 * `undefined` is returned.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Math
 * @param {Array} array The array to iterate over.
 * @returns {*} Returns the minimum value.
 * @example
 *
 * _.min([4, 2, 8, 6]);
 * // => 2
 *
 * _.min([]);
 * // => undefined
 */

/**
 * Computes whether the given element should automatically trigger the
 * `focus-visible` class being added, i.e. whether it should always match
 * `:focus-visible` when focused.
 * @param {Element} node
 * @returns {boolean}
 */

/**
 * Constructor to create a storage for our `EE` objects.
 * An `Events` instance is a plain object whose properties are event names.
 *
 * @constructor
 * @private
 */

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */

/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */

/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */

/**
 * Converts `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */

/**
 * Converts `value` to a finite number.
 *
 * @static
 * @memberOf _
 * @since 4.12.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted number.
 * @example
 *
 * _.toFinite(3.2);
 * // => 3.2
 *
 * _.toFinite(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toFinite(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toFinite('3.2');
 * // => 3.2
 */

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */

/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */

/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */

/**
 * Converts `value` to an integer.
 *
 * **Note:** This method is loosely based on
 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted integer.
 * @example
 *
 * _.toInteger(3.2);
 * // => 3
 *
 * _.toInteger(Number.MIN_VALUE);
 * // => 0
 *
 * _.toInteger(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toInteger('3.2');
 * // => 3
 */

/**
 * Converts a Unicode `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */

/**
 * Converts an ASCII `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */

/**
 * Converts the first character of `string` to upper case.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.upperFirst('fred');
 * // => 'Fred'
 *
 * _.upperFirst('FRED');
 * // => 'FRED'
 */

/**
 * Coordinate addition
 * @param a The first coordinate
 * @param b The second coordinate
 */

/**
 * Coordinate subtraction
 * @param a The first coordinate
 * @param b The second coordinate
 */

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */

/**
 * Corresponds to 10 frames at 60 Hz.
 * A few bytes payload overhead when lodash/debounce is ~3 kB and debounce ~300 B.
 */

/**
 * Create a comparator method based on the type-specific equality comparators passed.
 */

/**
 * Create a custom equality comparison method.
 *
 * This can be done to create very targeted comparisons in extreme hot-path scenarios
 * where the standard methods are not performant enough, but can also be used to provide
 * support for legacy environments that do not support expected features like
 * `RegExp.prototype.flags` out of the box.
 */

/**
 * Create the React Context
 */

/**
 * Create the `isEqual` function used by the consuming application.
 */

/**
 * Create the configuration object used for building comparators.
 */

/**
 * Creates a Redux store that holds the state tree.
 *
 * **We recommend using `configureStore` from the
 * `@reduxjs/toolkit` package**, which replaces `createStore`:
 * **https://redux.js.org/introduction/why-rtk-is-redux-today**
 *
 * The only way to change the data in the store is to call `dispatch()` on it.
 *
 * There should only be a single store in your app. To specify how different
 * parts of the state tree respond to actions, you may combine several reducers
 * into a single reducer function by using `combineReducers`.
 *
 * @param {Function} reducer A function that returns the next state tree, given
 * the current state tree and the action to handle.
 *
 * @param {any} [preloadedState] The initial state. You may optionally specify it
 * to hydrate the state from the server in universal apps, or to restore a
 * previously serialized user session.
 * If you use `combineReducers` to produce the root reducer function, this must be
 * an object with the same shape as `combineReducers` keys.
 *
 * @param {Function} [enhancer] The store enhancer. You may optionally specify it
 * to enhance the store with third-party capabilities such as middleware,
 * time travel, persistence, etc. The only store enhancer that ships with Redux
 * is `applyMiddleware()`.
 *
 * @returns {Store} A Redux store that lets you read the state, dispatch actions
 * and subscribe to changes.
 */

/**
 * Creates a `_.find` or `_.findLast` function.
 *
 * @private
 * @param {Function} findIndexFunc The function to find the collection index.
 * @returns {Function} Returns the new find function.
 */

/**
 * Creates a `_.range` or `_.rangeRight` function.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new range function.
 */

/**
 * Creates a `baseEach` or `baseEachRight` function.
 *
 * @private
 * @param {Function} eachFunc The function to iterate over a collection.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */

/**
 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */

/**
 * Creates a flattened array of values by running each element in `collection`
 * thru `iteratee` and flattening the mapped results. The iteratee is invoked
 * with three arguments: (value, index|key, collection).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * function duplicate(n) {
 *   return [n, n];
 * }
 *
 * _.flatMap([1, 2], duplicate);
 * // => [1, 1, 2, 2]
 */

/**
 * Creates a function like `_.lowerFirst`.
 *
 * @private
 * @param {string} methodName The name of the `String` case method to use.
 * @returns {Function} Returns the new case function.
 */

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */

/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */

/**
 * Creates a function that returns the value at `path` of a given object.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 * @example
 *
 * var objects = [
 *   { 'a': { 'b': 2 } },
 *   { 'a': { 'b': 1 } }
 * ];
 *
 * _.map(objects, _.property('a.b'));
 * // => [2, 1]
 *
 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
 * // => [1, 2]
 */

/**
 * Creates a function that'll short out and invoke `identity` instead
 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
 * milliseconds.
 *
 * @private
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new shortable function.
 */

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */

/**
 * Creates a throttled function that only invokes `func` at most once per
 * every `wait` milliseconds. The throttled function comes with a `cancel`
 * method to cancel delayed `func` invocations and a `flush` method to
 * immediately invoke them. Provide `options` to indicate whether `func`
 * should be invoked on the leading and/or trailing edge of the `wait`
 * timeout. The `func` is invoked with the last arguments provided to the
 * throttled function. Subsequent calls to the throttled function return the
 * result of the last `func` invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the throttled function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.throttle` and `_.debounce`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to throttle.
 * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=true]
 *  Specify invoking on the leading edge of the timeout.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new throttled function.
 * @example
 *
 * // Avoid excessively updating the position while scrolling.
 * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
 *
 * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
 * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
 * jQuery(element).on('click', throttled);
 *
 * // Cancel the trailing throttled invocation.
 * jQuery(window).on('popstate', throttled.cancel);
 */

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */

/**
 * Creates an array of elements, sorted in ascending order by the results of
 * running each element in a collection thru each iteratee. This method
 * performs a stable sort, that is, it preserves the original sort order of
 * equal elements. The iteratees are invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {...(Function|Function[])} [iteratees=[_.identity]]
 *  The iteratees to sort by.
 * @returns {Array} Returns the new sorted array.
 * @example
 *
 * var users = [
 *   { 'user': 'fred',   'age': 48 },
 *   { 'user': 'barney', 'age': 36 },
 *   { 'user': 'fred',   'age': 30 },
 *   { 'user': 'barney', 'age': 34 }
 * ];
 *
 * _.sortBy(users, [function(o) { return o.user; }]);
 * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]
 *
 * _.sortBy(users, ['user', 'age']);
 * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]
 */

/**
 * Creates an array of numbers (positive and/or negative) progressing from
 * `start` up to, but not including, `end`. A step of `-1` is used if a negative
 * `start` is specified without an `end` or `step`. If `end` is not specified,
 * it's set to `start` with `start` then set to `0`.
 *
 * **Note:** JavaScript follows the IEEE-754 standard for resolving
 * floating-point values which can produce unexpected results.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {number} [start=0] The start of the range.
 * @param {number} end The end of the range.
 * @param {number} [step=1] The value to increment or decrement by.
 * @returns {Array} Returns the range of numbers.
 * @see _.inRange, _.rangeRight
 * @example
 *
 * _.range(4);
 * // => [0, 1, 2, 3]
 *
 * _.range(-4);
 * // => [0, -1, -2, -3]
 *
 * _.range(1, 5);
 * // => [1, 2, 3, 4]
 *
 * _.range(0, 20, 5);
 * // => [0, 5, 10, 15]
 *
 * _.range(0, -4, -1);
 * // => [0, -1, -2, -3]
 *
 * _.range(1, 4, 0);
 * // => [1, 1, 1]
 *
 * _.range(0);
 * // => []
 */

/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */

/**
 * Creates an array of values by running each element in `collection` thru
 * `iteratee`. The iteratee is invoked with three arguments:
 * (value, index|key, collection).
 *
 * Many lodash methods are guarded to work as iteratees for methods like
 * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
 *
 * The guarded methods are:
 * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
 * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
 * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
 * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * _.map([4, 8], square);
 * // => [16, 64]
 *
 * _.map({ 'a': 4, 'b': 8 }, square);
 * // => [16, 64] (iteration order is not guaranteed)
 *
 * var users = [
 *   { 'user': 'barney' },
 *   { 'user': 'fred' }
 * ];
 *
 * // The `_.property` iteratee shorthand.
 * _.map(users, 'user');
 * // => ['barney', 'fred']
 */

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */

/**
 * Creates an object with the same keys as `object` and values generated
 * by running each own enumerable string keyed property of `object` thru
 * `iteratee`. The iteratee is invoked with three arguments:
 * (value, key, object).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Object
 * @param {Object} object The object to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Object} Returns the new mapped object.
 * @see _.mapKeys
 * @example
 *
 * var users = {
 *   'fred':    { 'user': 'fred',    'age': 40 },
 *   'pebbles': { 'user': 'pebbles', 'age': 1 }
 * };
 *
 * _.mapValues(users, function(o) { return o.age; });
 * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
 *
 * // The `_.property` iteratee shorthand.
 * _.mapValues(users, 'age');
 * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
 */

/**
 * Credit to MUI team @ https://mui.com
 * Safe chained function.
 *
 * Will only create a new function if needed,
 * otherwise will pass back existing functions or null.
 */

/**
 * Credit to MUI team @ https://mui.com
 * https://github.com/facebook/react/issues/14099#issuecomment-440013892
 */

/**
 * Credit to MUI team @ https://mui.com
 */

/**
 * Custom hook to manage the entire form.
 *
 * @remarks
 * [API](https://react-hook-form.com/docs/useform) • [Demo](https://codesandbox.io/s/react-hook-form-get-started-ts-5ksmm) • [Video](https://www.youtube.com/watch?v=RkXv4AXXC_4)
 *
 * @param props - form configuration and validation parameters.
 *
 * @returns methods - individual functions to manage the form state. {@link UseFormReturn}
 *
 * @example
 * ```tsx
 * function App() {
 *   const { register, handleSubmit, watch, formState: { errors } } = useForm();
 *   const onSubmit = data => console.log(data);
 *
 *   console.log(watch("example"));
 *
 *   return (
 *     <form onSubmit={handleSubmit(onSubmit)}>
 *       <input defaultValue="test" {...register("example")} />
 *       <input {...register("exampleRequired", { required: true })} />
 *       {errors.exampleRequired && <span>This field is required</span>}
 *       <button>Submit</button>
 *     </form>
 *   );
 * }
 * ```
 */

/**
 * Custom hook to subscribe to field change and isolate re-rendering at the component level.
 *
 * @remarks
 *
 * [API](https://react-hook-form.com/docs/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)
 *
 * @example
 * ```tsx
 * const { control } = useForm();
 * const values = useWatch({
 *   name: "fieldName"
 *   control,
 * })
 * ```
 */

/**
 * Custom hook to work with controlled component, this function provide you with both form and field level state. Re-render is isolated at the hook level.
 *
 * @remarks
 * [API](https://react-hook-form.com/docs/usecontroller) • [Demo](https://codesandbox.io/s/usecontroller-0o8px)
 *
 * @param props - the path name to the form field value, and validation rules.
 *
 * @returns field properties, field and form state. {@link UseControllerReturn}
 *
 * @example
 * ```tsx
 * function Input(props) {
 *   const { field, fieldState, formState } = useController(props);
 *   return (
 *     <div>
 *       <input {...field} placeholder={props.name} />
 *       <p>{fieldState.isTouched && "Touched"}</p>
 *       <p>{formState.isSubmitted ? "submitted" : ""}</p>
 *     </div>
 *   );
 * }
 * ```
 */

/**
 * Default equality comparator pass-through, used as the standard `isEqual` creator for
 * use inside the built comparator.
 */

/**
 * Determine if two cartesian coordinate offsets are equal
 * @param offsetA
 * @param offsetB
 */

/**
 * Determines how values are stacked:
 *
 * - `none` is the default, it adds values on top of each other. No smarts. Negative values will overlap.
 * - `expand` make it so that the values always add up to 1 - so the chart will look like a rectangle.
 * - `wiggle` and `silhouette` tries to keep the chart centered.
 * - `sign` stacks positive values above zero and negative values below zero. Similar to `none` but handles negatives.
 * - `positive` ignores all negative values, and then behaves like \`none\`.
 *
 * Also see https://d3js.org/d3-shape/stack#stack-offsets
 * (note that the `diverging` offset in d3 is named `sign` in recharts)
 */

/**
 * Determines if a given element is a DOM element name (i.e. not a React component).
 */

/**
 * Determines if the given handler IDs are dirty or not.
 *
 * @param dirtyIds The set of dirty handler ids
 * @param handlerIds The set of handler ids to check
 */

/**
 * Determines if two arrays of items are equal
 * @param a The first array of items
 * @param b The second array of items
 */

/**
 * Determines the x,y offset between the client offset and the initial client offset
 *
 * @param state The offset state to compute from
 */

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */

/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */

/**
 * Extracts event handlers from a given object.
 * A prop is considered an event handler if it is a function and its name starts with `on`.
 *
 * @param object An object to extract event handlers from.
 * @param excludeKeys An array of keys to exclude from the returned object.
 */

/**
 * Find the continued fraction representation of a number.
 * @param the value to be converted to a continued faction.
 * @param the precision with which to compute (eg. 0.01 will compute values until the fraction is at least as precise as 0.01).
 * @return An object {quotients: quotients, numerator: numerator, denominator: denominator} where quotients is
 * an array of the quotients making up the continued fraction whose value is within the specified precision of the targetValue,
 * and where numerator and denominator are the integer values to which the continued fraction evaluates.
 */

/**
 * Find the null space in modulus 2 arithmetic of a matrix of binary values
 * @param matrix matrix of binary values represented using an array of numbers
 * whose bit values are the entries of a matrix rowIndex.
 * @param width the width of the matrix.
 */

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/

/**
 * Generates string classKey based on the properties provided. It starts with the
 * variant if defined, and then it appends all other properties in alphabetical order.
 * @param {object} props - the properties for which the classKey should be created.
 */

/**
 * Get domain of data by key.
 * @param  {Array}   data      The data displayed in the chart
 * @param  {String}  key       The unique key of a group of data
 * @param  {String}  type      The type of axis
 * @param  {Boolean} filterNil Whether or not filter nil values
 * @return {Array} Domain of data
 */

/**
 * Get the content to be displayed in the tooltip
 * @param  {Object} state          Current state
 * @param  {Array}  chartData      The data defined in chart
 * @param  {Number} activeIndex    Active index of data
 * @param  {String} activeLabel    Active label of data
 * @return {Array}                 The content of tooltip
 */

/**
 * Get the main color of each graphic item
 * @param  {ReactElement} item A graphic item
 * @return {String}            Color
 */

/**
 * Get the properties to strictly examine, which include both own properties that are
 * not enumerable and symbol properties.
 */

/**
 * Gets only the valid children of a component,
 * and ignores any nullish or falsy child.
 *
 * @param children the children
 */

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */

/**
 * Gets the last element of `array`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to query.
 * @returns {*} Returns the last element of `array`.
 * @example
 *
 * _.last([1, 2, 3]);
 * // => 3
 */

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */

/**
 * Gets the property names, values, and compare flags of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the match data of `object`.
 */

/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */

/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */

/**
 * Gets the value at `path` of `object`. If the resolved value is
 * `undefined`, the `defaultValue` is returned in its place.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.get(object, 'a[0].b.c');
 * // => 3
 *
 * _.get(object, ['a', '0', 'b', 'c']);
 * // => 3
 *
 * _.get(object, 'a.b.c', 'default');
 * // => 'default'
 */

/**
 * Given `this.props.children`, return an object mapping key to child.
 *
 * @param {*} children `this.props.children`
 * @return {object} Mapping of key to child
 */

/**
 * Given an array and a number N, return a new array which contains every nTh
 * element of the input array. For n below 1, an empty array is returned.
 * If isValid is provided, all candidates must suffice the condition, else undefined is returned.
 * @param {T[]} array An input array.
 * @param {integer} n A number
 * @param {Function} isValid A function to evaluate a candidate form the array
 * @returns {T[]} The result array of the same type as the input array.
 */

/**
 * Greatest common divisor
 */

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */

/**
 * If `componentProps` is a function, calls it with the provided `ownerState`.
 * Otherwise, just returns `componentProps`.
 */

/**
 * If at any point a user clicks with a pointing device, ensure that we change
 * the modality away from keyboard.
 * This avoids the situation where a user presses a key on an already focused
 * element, and then clicks on a different element, focusing it with a
 * pointing device, while we still think we're in keyboard modality.
 */

/**
 * Inspired by https://github.com/facebook/react/issues/14099#issuecomment-440013892
 * See RFC in https://github.com/reactjs/rfcs/pull/220
 */

/**
 * Internal utility hook to get an array-version of spec.accept.
 * The main utility here is that we aren't creating a new array on every render if a non-array spec.accept is passed in.
 * @param spec
 */

/**
 * Iterates over elements of `collection`, returning the first element
 * `predicate` returns truthy for. The predicate is invoked with three
 * arguments: (value, index|key, collection).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param {number} [fromIndex=0] The index to search from.
 * @returns {*} Returns the matched element, else `undefined`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'age': 36, 'active': true },
 *   { 'user': 'fred',    'age': 40, 'active': false },
 *   { 'user': 'pebbles', 'age': 1,  'active': true }
 * ];
 *
 * _.find(users, function(o) { return o.age < 40; });
 * // => object for 'barney'
 *
 * // The `_.matches` iteratee shorthand.
 * _.find(users, { 'age': 1, 'active': true });
 * // => object for 'pebbles'
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.find(users, ['active', false]);
 * // => object for 'fred'
 *
 * // The `_.property` iteratee shorthand.
 * _.find(users, 'active');
 * // => object for 'barney'
 */

/**
 * Keep track of our keyboard modality state with `hadKeyboardEvent`.
 * If the most recent user interaction was via the keyboard;
 * and the key press did not include a meta, alt/option, or control key;
 * then the modality is keyboard. Otherwise, the modality is not keyboard.
 * @param {KeyboardEvent} event
 */

/**
 * Least common multiple
 */

/**
 * Merges the slot component internal props (usually coming from a hook)
 * with the externally provided ones.
 *
 * The merge order is (the latter overrides the former):
 * 1. The internal props (specified as a getter function to work with get*Props hook result)
 * 2. Additional props (specified internally on a Base UI component)
 * 3. External props specified on the owner component. These should only be used on a root slot.
 * 4. External props specified in the `slotProps.*` prop.
 * 5. The `className` prop - combined from all the above.
 * @param parameters
 * @returns
 */

/**
 * Minimal `EventEmitter` interface that is molded against the Node.js
 * `EventEmitter` interface.
 *
 * @constructor
 * @public
 */

/**
 * Only applicable for radial layouts
 * @param {Object} activeCoordinate ChartCoordinate
 * @returns {Object} RadialCursorPoints
 */

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */

/**
 * Performs a deep comparison between two values to determine if they are
 * equivalent.
 *
 * **Note:** This method supports comparing arrays, array buffers, booleans,
 * date objects, error objects, maps, numbers, `Object` objects, regexes,
 * sets, strings, symbols, and typed arrays. `Object` objects are compared
 * by their own, not inherited, enumerable properties. Functions and DOM
 * nodes are compared by strict equality, i.e. `===`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.isEqual(object, other);
 * // => true
 *
 * object === other;
 * // => false
 */

/**
 * Portals provide a first-class way to render children into a DOM node
 * that exists outside the DOM hierarchy of the parent component.
 *
 * Demos:
 *
 * - [Portal](https://mui.com/base-ui/react-portal/)
 *
 * API:
 *
 * - [Portal API](https://mui.com/base-ui/react-portal/components-api/#portal)
 */

/**
 * Private module reserved for @mui packages.
 */

/**
 * QuantumStateGeneratorのjsqubits実装
 */

/**
 * QuantumStateのjsqubits実装
 */

/**
 * Remove all listeners, or those of the specified event.
 *
 * @param {(String|Symbol)} [event] The event name.
 * @returns {EventEmitter} `this`.
 * @public
 */

/**
 * Remove the listeners of a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn Only remove the listeners that match this function.
 * @param {*} context Only remove the listeners that have this context.
 * @param {Boolean} once Only remove one-time listeners.
 * @returns {EventEmitter} `this`.
 * @public
 */

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */

/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */

/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */

/**
 * Removes event handlers from the given object.
 * A field is considered an event handler if it is a function with a name beginning with `on`.
 *
 * @param object Object to remove event handlers from.
 * @returns Object with event handlers removed.
 */

/**
 * Representation of a single event listener.
 *
 * @param {Function} fn The listener function.
 * @param {*} context The context to invoke the listener with.
 * @param {Boolean} [once=false] Specify if the listener is a one-time listener.
 * @constructor
 * @private
 */

/**
 * Return an array listing the events for which the emitter has registered
 * listeners.
 *
 * @returns {Array}
 * @public
 */

/**
 * Return the listeners registered for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Array} The registered listeners.
 * @public
 */

/**
 * Return the number of listeners listening to a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Number} The number of listeners.
 * @public
 */

/**
 * Return x such that n = x^y for some prime number x, or otherwise return 0.
 */

/**
 * Return x^y mod m
 */

/**
 * Returns the cartesian distance of the drag source component's position, based on its position
 * at the time when the current drag operation has started, and the movement difference.
 *
 * Returns null if no item is being dragged.
 *
 * @param state The offset state to compute from
 */

/**
 * Returns tooltip data based on a mouse position (as a parameter or in state)
 * @param  {Object} state     current state
 * @param  {Array}  chartData the data defined in chart
 * @param  {String} layout     The layout type of chart
 * @param  {Object} rangeObj  { x, y } coordinates
 * @return {Object}           Tooltip data data
 */

/**
 * Safe chained function.
 *
 * Will only create a new function if needed,
 * otherwise will pass back existing functions or null.
 */

/**
 * Sets the `toString` method of `func` to return `string`.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

/**
 * TODO v5: consider making it private
 *
 * passes {value} to {ref}
 *
 * WARNING: Be sure to only call this inside a callback that is passed as a ref.
 * Otherwise, make sure to cleanup the previous {ref} if it changes. See
 * https://github.com/mui/material-ui/issues/13539
 *
 * Useful if you want to expose the ref of an inner component to the public API
 * while still using it inside the component.
 * @param ref A ref callback or ref object. If anything falsy, this is a no-op.
 */

/**
 * Takes a domain and user props to determine whether he provided the domain via props or if we need to calculate it.
 * @param   {AxisDomain}  domain              The potential domain from props
 * @param   {Boolean}     allowDataOverflow   from props
 * @param   {String}      axisType            from props
 * @returns {Boolean}                         `true` if domain is specified by user
 */

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

/**
 * The Transition component lets you describe a transition from one component
 * state to another _over time_ with a simple declarative API. Most commonly
 * it's used to animate the mounting and unmounting of a component, but can also
 * be used to describe in-place transition states as well.
 *
 * ---
 *
 * **Note**: `Transition` is a platform-agnostic base component. If you're using
 * transitions in CSS, you'll probably want to use
 * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)
 * instead. It inherits all the features of `Transition`, but contains
 * additional features necessary to play nice with CSS transitions (hence the
 * name of the component).
 *
 * ---
 *
 * By default the `Transition` component does not alter the behavior of the
 * component it renders, it only tracks "enter" and "exit" states for the
 * components. It's up to you to give meaning and effect to those states. For
 * example we can add styles to a component when it enters or exits:
 *
 * ```jsx
 * import { Transition } from 'react-transition-group';
 *
 * const duration = 300;
 *
 * const defaultStyle = {
 *   transition: `opacity ${duration}ms ease-in-out`,
 *   opacity: 0,
 * }
 *
 * const transitionStyles = {
 *   entering: { opacity: 0 },
 *   entered:  { opacity: 1 },
 * };
 *
 * const Fade = ({ in: inProp }) => (
 *   <Transition in={inProp} timeout={duration}>
 *     {state => (
 *       <div style={{
 *         ...defaultStyle,
 *         ...transitionStyles[state]
 *       }}>
 *         I'm a fade Transition!
 *       </div>
 *     )}
 *   </Transition>
 * );
 * ```
 *
 * There are 4 main states a Transition can be in:
 *  - `'entering'`
 *  - `'entered'`
 *  - `'exiting'`
 *  - `'exited'`
 *
 * Transition state is toggled via the `in` prop. When `true` the component
 * begins the "Enter" stage. During this stage, the component will shift from
 * its current transition state, to `'entering'` for the duration of the
 * transition and then to the `'entered'` stage once it's complete. Let's take
 * the following example (we'll use the
 * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):
 *
 * ```jsx
 * function App() {
 *   const [inProp, setInProp] = useState(false);
 *   return (
 *     <div>
 *       <Transition in={inProp} timeout={500}>
 *         {state => (
 *           // ...
 *         )}
 *       </Transition>
 *       <button onClick={() => setInProp(true)}>
 *         Click to Enter
 *       </button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the button is clicked the component will shift to the `'entering'` state
 * and stay there for 500ms (the value of `timeout`) before it finally switches
 * to `'entered'`.
 *
 * When `in` is `false` the same thing happens except the state moves from
 * `'exiting'` to `'exited'`.
 */

/**
 * The `<ReplaceTransition>` component is a specialized `Transition` component
 * that animates between two children.
 *
 * ```jsx
 * <ReplaceTransition in>
 *   <Fade><div>I appear first</div></Fade>
 *   <Fade><div>I replace the above</div></Fade>
 * </ReplaceTransition>
 * ```
 */

/**
 * The base implementation of `_.every` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if all elements pass the predicate check,
 *  else `false`
 */

/**
 * The base implementation of `_.findIndex` and `_.findLastIndex` without
 * support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {number} fromIndex The index to search from.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */

/**
 * The base implementation of `_.flatten` with support for restricting flattening.
 *
 * @private
 * @param {Array} array The array to flatten.
 * @param {number} depth The maximum recursion depth.
 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
 * @param {Array} [result=[]] The initial result value.
 * @returns {Array} Returns the new flattened array.
 */

/**
 * The base implementation of `_.forEach` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 */

/**
 * The base implementation of `_.forOwn` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Object} Returns `object`.
 */

/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */

/**
 * The base implementation of `_.gt` which doesn't coerce arguments.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if `value` is greater than `other`,
 *  else `false`.
 */

/**
 * The base implementation of `_.hasIn` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */

/**
 * The base implementation of `_.inRange` which doesn't coerce arguments.
 *
 * @private
 * @param {number} number The number to check.
 * @param {number} start The start of the range.
 * @param {number} end The end of the range.
 * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
 */

/**
 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */

/**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Unordered comparison
 *  2 - Partial comparison
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */

/**
 * The base implementation of `_.isMatch` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property values to match.
 * @param {Array} matchData The property names, values, and compare flags to match.
 * @param {Function} [customizer] The function to customize comparisons.
 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
 */

/**
 * The base implementation of `_.isNaN` without support for number objects.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 */

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */

/**
 * The base implementation of `_.iteratee`.
 *
 * @private
 * @param {*} [value=_.identity] The value to convert to an iteratee.
 * @returns {Function} Returns the iteratee.
 */

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */

/**
 * The base implementation of `_.lt` which doesn't coerce arguments.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if `value` is less than `other`,
 *  else `false`.
 */

/**
 * The base implementation of `_.map` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */

/**
 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
 *
 * @private
 * @param {string} path The path of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */

/**
 * The base implementation of `_.matches` which doesn't clone `source`.
 *
 * @private
 * @param {Object} source The object of property values to match.
 * @returns {Function} Returns the new spec function.
 */

/**
 * The base implementation of `_.orderBy` without param guards.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
 * @param {string[]} orders The sort orders of `iteratees`.
 * @returns {Array} Returns the new sorted array.
 */

/**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new accessor function.
 */

/**
 * The base implementation of `_.range` and `_.rangeRight` which doesn't
 * coerce arguments.
 *
 * @private
 * @param {number} start The start of the range.
 * @param {number} end The end of the range.
 * @param {number} step The value to increment or decrement by.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Array} Returns the range of numbers.
 */

/**
 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */

/**
 * The base implementation of `_.slice` without an iteratee call guard.
 *
 * @private
 * @param {Array} array The array to slice.
 * @param {number} [start=0] The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the slice of `array`.
 */

/**
 * The base implementation of `_.some` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */

/**
 * The base implementation of `_.sortBy` which uses `comparer` to define the
 * sort order of `array` and replaces criteria objects with their corresponding
 * values.
 *
 * @private
 * @param {Array} array The array to sort.
 * @param {Function} comparer The function to define sort order.
 * @returns {Array} Returns `array`.
 */

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */

/**
 * The base implementation of `_.trim`.
 *
 * @private
 * @param {string} string The string to trim.
 * @returns {string} Returns the trimmed string.
 */

/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */

/**
 * The base implementation of `_.uniqBy` without support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 */

/**
 * The base implementation of `assignValue` and `assignMergeValue` without
 * value checks.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */

/**
 * The base implementation of `baseForOwn` which iterates over `object`
 * properties returned by `keysFunc` and invokes `iteratee` for each property.
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */

/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */

/**
 * The base implementation of `setToString` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */

/**
 * The base implementation of methods like `_.max` and `_.min` which accepts a
 * `comparator` to determine the extremum value.
 *
 * @private
 * @param {Array} array The array to iterate over.
 * @param {Function} iteratee The iteratee invoked per iteration.
 * @param {Function} comparator The comparator used to compare values.
 * @returns {*} Returns the extremum value.
 */

/**
 * The least square linear regression
 * @param {Array} data The array of points
 * @returns {Object} The domain of x, and the parameter of linear function
 */

/**
 * These are private action types reserved by Redux.
 * For any unknown actions, you must return the current state.
 * If the current state is undefined, you must return the initial state.
 * Do not reference these action types directly in your code.
 */

/**
 * This custom hook allows you to subscribe to each form state, and isolate the re-render at the custom hook level. It has its scope in terms of form state subscription, so it would not affect other useFormState and useForm. Using this hook can reduce the re-render impact on large and complex form application.
 *
 * @remarks
 * [API](https://react-hook-form.com/docs/useformstate) • [Demo](https://codesandbox.io/s/useformstate-75xly)
 *
 * @param props - include options on specify fields to subscribe. {@link UseFormStateReturn}
 *
 * @example
 * ```tsx
 * function App() {
 *   const { register, handleSubmit, control } = useForm({
 *     defaultValues: {
 *     firstName: "firstName"
 *   }});
 *   const { dirtyFields } = useFormState({
 *     control
 *   });
 *   const onSubmit = (data) => console.log(data);
 *
 *   return (
 *     <form onSubmit={handleSubmit(onSubmit)}>
 *       <input {...register("firstName")} placeholder="First Name" />
 *       {dirtyFields.firstName && <p>Field is dirty.</p>}
 *       <input type="submit" />
 *     </form>
 *   );
 * }
 * ```
 */

/**
 * This excludes `viewBox` prop from svg for two reasons:
 * 1. The components wants viewBox of object type, and svg wants string
 *    - so there's a conflict, and the component will throw if it gets string
 * 2. Internally the component calls `filterProps` which filters the viewBox away anyway
 */

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */

/**
 * This function is like `arrayIncludes` except that it accepts a comparator.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @param {Function} comparator The comparator invoked per element.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */

/**
 * This is an abstraction for rendering a user defined prop for a customized shape in several forms.
 *
 * <Shape /> is the root and will handle taking in:
 *  - an object of svg properties
 *  - a boolean
 *  - a render prop(inline function that returns jsx)
 *  - a react element
 *
 * <ShapeSelector /> is a subcomponent of <Shape /> and used to match a component
 * to the value of props.shapeType that is passed to the root.
 *
 */

/**
 * This is an abstraction to handle identifying the active index from a tooltip mouse interaction
 */

/**
 * This is configuration option that decides how to filter for unique values only:
 *
 * - `false` means "no filter"
 * - `true` means "use recharts default filter"
 * - function means "use return of this function as the default key"
 */

/**
 * This method is like `_.find` except that it returns the index of the first
 * element `predicate` returns truthy for instead of the element itself.
 *
 * @static
 * @memberOf _
 * @since 1.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param {number} [fromIndex=0] The index to search from.
 * @returns {number} Returns the index of the found element, else `-1`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'active': false },
 *   { 'user': 'fred',    'active': false },
 *   { 'user': 'pebbles', 'active': true }
 * ];
 *
 * _.findIndex(users, function(o) { return o.user == 'barney'; });
 * // => 0
 *
 * // The `_.matches` iteratee shorthand.
 * _.findIndex(users, { 'user': 'fred', 'active': false });
 * // => 1
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.findIndex(users, ['active', false]);
 * // => 0
 *
 * // The `_.property` iteratee shorthand.
 * _.findIndex(users, 'active');
 * // => 2
 */

/**
 * This method is like `_.uniq` except that it accepts `iteratee` which is
 * invoked for each element in `array` to generate the criterion by which
 * uniqueness is computed. The order of result values is determined by the
 * order they occur in the array. The iteratee is invoked with one argument:
 * (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 * @example
 *
 * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
 * // => [2.1, 1.2]
 *
 * // The `_.property` iteratee shorthand.
 * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
 * // => [{ 'x': 1 }, { 'x': 2 }]
 */

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */

/**
 * This method returns `undefined`.
 *
 * @static
 * @memberOf _
 * @since 2.3.0
 * @category Util
 * @example
 *
 * _.times(2, _.noop);
 * // => [undefined, undefined]
 */

/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */

/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */

/**
 * Translate the node so it can't be seen on the screen.
 * Later, we're going to translate the node back to its original location with `none`.
 */

/**
 * Type of the ownerState based on the type of an element it applies to.
 * This resolves to the provided OwnerState for React components and `undefined` for host components.
 * Falls back to `OwnerState | undefined` when the exact type can't be determined in development time.
 */

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

/**
 * Used by `_.orderBy` to compare multiple properties of a value to another
 * and stable sort them.
 *
 * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
 * specify an order of "desc" for descending or "asc" for ascending sort order
 * of corresponding values.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {boolean[]|string[]} orders The order to sort by for each property.
 * @returns {number} Returns the sort order indicator for `object`.
 */

/**
 * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace
 * character of `string`.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {number} Returns the index of the last non-whitespace character.
 */

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */

/**
 * Utility component that locks focus inside the component.
 *
 * Demos:
 *
 * - [Focus Trap](https://mui.com/base-ui/react-focus-trap/)
 *
 * API:
 *
 * - [FocusTrap API](https://mui.com/base-ui/react-focus-trap/components-api/#focus-trap)
 */

/**
 * When you're adding or removing children some may be added or removed in the
 * same render pass. We want to show *both* since we want to simultaneously
 * animate elements in and out. This function takes a previous set of keys
 * and a new set of keys and merges them with its best guess of the correct
 * ordering. In the future we may expose some of the utilities in
 * ReactMultiChild to make this easy, but for now React itself does not
 * directly have this concept of the union of prevChildren and nextChildren
 * so we implement it here.
 *
 * @param {object} prev prev children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @param {object} next next children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @return {object} a key set that contains all keys in `prev` and all keys
 * in `next` in a reasonable order.
 */

/**
 * Whether the TypedArray instances are equal in value.
 */

/**
 * Whether the `Map`s are equal in value.
 */

/**
 * Whether the `Set`s are equal in value.
 */

/**
 * Whether the arrays are equal in value.
 */

/**
 * Whether the dates passed are equal in value.
 */

/**
 * Whether the items passed are deeply-equal in value based on strict comparison.
 */

/**
 * Whether the items passed are deeply-equal in value.
 */

/**
 * Whether the object contains the property passed as an own property.
 */

/**
 * Whether the objects are equal in value with strict property checking.
 */

/**
 * Whether the objects are equal in value.
 */

/**
 * Whether the primitive wrappers passed are equal in value.
 */

/**
 * Whether the regexps passed are equal in value.
 */

/**
 * Whether the values passed are strictly equal or both NaN.
 */

/**
 * Wrap the provided `areItemsEqual` method to manage the circular state, allowing
 * for circular references to be safely included in the comparison without creating
 * stack overflows.
 */

/**
 * calculate the ticks when the minimum value equals to the maximum value
 *
 * @param  {Number}  value         The minimum valuue which is also the maximum value
 * @param  {Integer} tickCount     The count of ticks
 * @param  {Boolean} allowDecimals Allow the ticks to be decimals or not
 * @return {Array}                 ticks
 */

/**
 * drop-in replacement for _.get
 * @param obj
 * @param path
 * @param defaultValue
 */

/**
 * drop-in replacement for _.isString
 * @param input
 */

/**
 * drop-in replacement for _.without
 */

/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/**
 * passes {value} to {ref}
 *
 * Useful if you want to expose the ref of an inner component to the public API
 * while still using it inside the component.
 * @param ref A ref callback or ref object. If anything falsy, this is a no-op.
 */

/**
 * qlamanaの挙動を設定する
 * 最初のQubitを生成した後に呼び出した場合、その動作は不定である
 */

/**
 * replacement for _.intersection
 * @param itemsA
 * @param itemsB
 */

/**
 * replacement for _.xor
 * @param itemsA
 * @param itemsB
 */

/**
 * useDragSource hook
 * @param sourceSpec The drag source specification (object or function, function preferred)
 * @param deps The memoization deps array to use when evaluating spec changes
 */

/**
 * useDropTarget Hook
 * @param spec The drop target specification (object or function, function preferred)
 * @param deps The memoization deps array to use when evaluating spec changes
 */

/**
 * validate the width and height props of a chart element
 * @param  {Object} el A chart element
 * @return {Boolean}   true If the props width and height are number, and greater than 0
 */

/**
 * ユニバーサルゲートセットで構成可能な演算のセット
 */

/**
 * 任意の数を表現する量子ビット列を生成する
 *
 * @param value     表現したい数
 * @param bitlength 生成される量子ビットの数
 */

/**
 * 对数值进行线性插值
 *
 * @param  {Number} a  定义域的极点
 * @param  {Number} b  定义域的极点
 * @param  {Number} t  [0, 1]内的某个值
 * @return {Number}    定义域内的某个值
 */

/**
 * 按照固定的步长获取[start, end)这个区间的数据
 * 并且需要处理js计算精度的问题
 *
 * @param  {Decimal} start 起点
 * @param  {Decimal} end   终点，不包含该值
 * @param  {Decimal} step  步长
 * @return {Array}         若干数值
 */

/**
 * 线性插值的逆运算
 *
 * @param  {Number} a 定义域的极点
 * @param  {Number} b 定义域的极点
 * @param  {Number} x 可以认为是插值后的一个输出值
 * @return {Number}   当x在 a ~ b这个范围内时，返回值属于[0, 1]
 */

/**
 * 获取数值的位数
 * 其中绝对值属于区间[0.1, 1)， 得到的值为0
 * 绝对值属于区间[0.01, 0.1)，得到的位数为 -1
 * 绝对值属于区间[0.001, 0.01)，得到的位数为 -2
 *
 * @param  {Number} value 数值
 * @return {Integer} 位数
 */

/**
 * 量子ビットの状態ベクトルを表現する抽象クラス
 * 1つ以上の量子ビットを管理し、操作・測定を行うインターフェイスを持つ
 *
 * ユーザは、QuantumStateを実装したクラスを用意するか、DefaultQuantumStateを利用する
 */

/**
 * 量子ビットを表現するクラス
 */

/**
@copyright (c) 2017-present James Kyle <me@thejameskyle.com>
 MIT License
 Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:
 The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.
 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE
*/

/** @class */

/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/** @license React v16.3.2
 * react.production.min.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/** @type LoadableSubscription */

/** A unit to be appended to a value */

/** Alias of safeParseAsync */

/** Built-in value references. */

/** Calculates the width of the largest horizontal line that fits inside a rectangle that is displayed at an angle.
 * @param {Object} size Width and height of the text in a horizontal position.
 * @param {number} angle Angle in degrees in which the text is displayed.
 * @return {number} The width of the largest horizontal line that fits inside a rectangle that is displayed at an angle.
 */

/** Define of XAxis props */

/** Detect free variable `exports`. */

/** Detect free variable `global` from Node.js. */

/** Detect free variable `self`. */

/** Error message constants. */

/** Normalizes the angle so that 0 <= angle < 180.
 * @param {number} angle Angle in degrees.
 * @return {number} the normalized angle with a value of at least 0 and never greater or equal to 180. */

/** The formatter function of tick */

/** The orientation of the axis in correspondence to the chart */

/** Used as references for various `Number` constants. */

/** Used as the maximum memoize cache size. */

/** Used as the size to enable large array optimizations. */

/** Used for built-in method references. */

/** Used to compose bitmasks for value comparisons. */

/** Used to compose unicode capture groups. */

/** Used to compose unicode character classes. */

/** Used to detect hot functions by number of calls within a span of milliseconds. */

/** Used to detect methods masquerading as native. */

/** Used to detect overreaching core-js shims. */

/** Used to detect unsigned integer values. */

/** Used to match a single whitespace character. */

/** Used to match leading whitespace. */

/** Used to match property names within property paths. */

/** Used to resolve the decompiled source of functions. */

/** Used to stand-in for `undefined` hash values. */

/** `Object#toString` result references. */

/************************************************************************/

/******/

/***/

/*eslint-disable no-self-compare*/

/*eslint-enable no-self-compare*/

//

//                    True when adorned at the start.

//                    True when any number or string with length.

//         ...augmentation,

//         ...def.shape(),

//         channel.port2.postMessage(0);

//         nextStatus = ENTERING

//         nextStatus = EXITING

//         setImmediate(callback);

//        Note this could actually be implemented as controlledR(controlBits, targetBits, PI/2)

//        Note this could actually be implemented as controlledR(controlBits, targetBits, PI/4)

//        TODO: make sure targetBit1 and targetBit2 are not contained in controlBits.

//       ...augmentation,

//       ...def,

//       ...this._def.shape(),

//       : k extends keyof Input

//       : k extends keyof Output

//       : never;

//       ? Augmentation[k]["_input"]

//       ? Augmentation[k]["_output"]

//       ? Input[k]

//       ? Output[k]

//       if (status !== ENTERING && status !== ENTERED) {

//       if (status === ENTERING || status === ENTERED) {

//       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),

//       shape: () => ({

//       }

//       }),

//     ...this._def,

//     Def["catchall"]

//     Def["unknownKeys"],

//     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation

//     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation

//     augmentation: Augmentation

//     catchall: merging._def.catchall,

//     channel.port1.onmessage = callback;

//     const { status } = this.state

//     extendShape<ReturnType<Def["shape"]>, Augmentation>,

//     if (this.props.in) {

//     return function requestCall() {

//     return new ZodObject({

//     shape: () =>

//     shape: () => ({

//     typeName: ZodFirstPartyTypeKind.ZodObject,

//     unknownKeys: merging._def.unknownKeys,

//     var channel = new MessageChannel();

//     }

//     } else {

//     }) as any;

//     }),

//     };

//    5. compare new remainder and divisor

//    6. If remainder > divisor: remainder -= divisor, k++

//    buffer.fill(buffer[, offset[, end]])

//    buffer.fill(number[, offset[, end]])

//    buffer.fill(string[, offset[, end]][, encoding])

//   ): ZodObject<

//   * https://github.com/react-dnd/react-dnd/issues/869

//   * https://github.com/react-dnd/react-dnd/pull/928

//   //   merging._def.shape()

//   //   this._def.shape(),

//   // );

//   // const mergedShape = objectUtil.mergeShapes(

//   1. Common complex object types (plain object, array)

//   2. Common data values (date, regexp)

//   3. Less-common complex object types (map, set)

//   4. Less-common data values (promise, primitive wrappers)

//   <Augmentation extends ZodRawShape>(

//   <Def extends ZodObjectDef>(def: Def) =>

//   > => {

//   Augmentation extends Incoming["shape"],

//   Augmentation extends ZodRawShape,

//   Catchall,

//   Incoming extends AnyZodObject,

//   Incoming["_def"]["catchall"]

//   Incoming["_def"]["catchall"],

//   Incoming["_def"]["unknownKeys"],

//   NewInput

//   NewInput extends util.flatten<{

//   NewInput extends {

//   NewOutput extends util.flatten<{

//   NewOutput extends {

//   NewOutput,

//   UnknownKeys,

//   augmentation: Augmentation

//   const merged: any = new ZodObject({

//   extendShape<T, Augmentation>,

//   extendShape<T, ReturnType<Incoming["_def"]["shape"]>>,

//   if (prevProps !== this.props) {

//   let nextStatus = null

//   merging: Incoming

//   return merged;

//   return new ZodObject({

//   return { nextStatus }

//   }

//   }) as any;

//   },

//   };

//   }>

//   }>,

//  1. product = divisor * trial digit (k)

//  2. if product > remainder: product -= divisor, k--

//  3. remainder -= product

//  4. if product was < remainder at 2:

//  Algorithm:

//  `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,

//  `tabIndex` of 0; since Chrome still puts those elements in the regular tab

//  order, consider their tab index to be 0.

//  yet they are still part of the regular tab order; in FF, they get a default

// "drop and blow away the whole document" action.

// "you can express cubic Hermite interpolation in terms of cubic Bézier curves

// $FlowFixMe

// $FlowFixMe: coerce undefined to string

// $FlowFixMe: we can ignore this because its exposed type is defined by the CreateStyled type

// $FlowFixMe: we need to cast StatelessFunctionalComponent to our PrivateStyledComponent class

// $FlowFixMe[cannot-write]

// $FlowFixMe[incompatible-call]: HTMLElement is a Node

// $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here

// $FlowFixMe[incompatible-return]

// $FlowFixMe[incompatible-return]: assume body is always available

// $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414

// $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...

// $FlowFixMe[prop-missing]

// $FlowFixMe[prop-missing]: need a better way to handle this...

// 'abxxcd' will be treated as 'ab')

// 'onFocus' is not currently a supported prop that can be passed through

// 'onKeyDown' is not currently a supported prop that can be passed through

// 'type',

// (chartX, chartY) are (0,0) in default state, but we want to keep the last mouse position to avoid

// (e.g., 1.2e+3) or the form \de[-+]\d+ (e.g., 1e+3).

// ): //ZodObject<T & Incoming["_shape"], UnknownKeys, Catchall> = (merging) => {

// ): ZodObject<

// - Firefox 3-13

// - Internet Explorer 6-9

// - Lynx 2.8.7

// - buffer - a Buffer to search

// - but this link is missing in the type definition

// - byteOffset - an index into `buffer`; will be clamped to an int32

// - dir - true for indexOf, false for lastIndexOf

// - encoding - an optional encoding, relevant is val is a string

// - iPad Safari 4.3

// - val - a string, Buffer, or number

// -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //

// ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //

// .mui-fixed is a global helper.

// // its existence.

// 0 to -MAX_E

// 0 to 1e9

// 0 to 8

// 0 to MAX_E

// 1 to MAX_DIGITS

// 1, 0.1, 0.01, 0.001, 0.0001 etc.

// 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can

// 11-12, and in web workers in many engines.

// 115 digits

// 1286742750677284

// 16.3+ will not execute our will-update method;

// 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'

// 2 leads in a row

// 23px

// 42px is the hit target

// 4999, i.e. approaching a rounding boundary, continue the iteration.

// 714.

// 96 is one less than the char code

// <div ref={node => connectDragSource(connectDropTarget(node))}/>

// =============

// ===============

// ================

// > {

// >(

// @inheritedComponent ButtonBase

// @param SSR

// @param obj

// @param value

// @returns {boolean} False when no adornments.

// @returns {boolean} False when not present or empty string.

// @returns {boolean} true if string (including '') or number (including zero)

// @see https://facebook.github.io/react/docs/forms.html#controlled-components

// @ts-expect-error Date cannot index an object

// @ts-expect-error definitelytyped types are incorrect

// @ts-expect-error expected to work in the browser

// @ts-expect-error hide `this`

// @ts-expect-error https://github.com/microsoft/TypeScript/pull/12253#issuecomment-263132208

// @ts-expect-error if (type === number) means that the domain is numerical type

// @ts-expect-error margin is optional in props but required in appendOffsetOfLegend

// @ts-expect-error parseFloat type only accepts strings

// @ts-expect-error property strokeDasharray is required in Payload but optional in props

// @ts-expect-error the type check above does not check for type number explicitly

// @ts-expect-error we need to rethink scale type

// @ts-expect-error we should stop reading data from ReactElements

// @ts-ignore

// @ts-ignore The nativeEvent is function, not object

// @ts-ignore buttons doesn't not exists on touch event

// @ts-ignore internal logic

// @ts-ignore internal logic - Base UI supports the manager as a prop too

// A "clipping parent" is an overflowable container with the characteristic of

// A change of the browser zoom change the scrollbar size.

// A few bytes payload overhead when lodash/debounce is ~3 kB and debounce ~300 B.

// A loading component is not required, so we default it

// A medial value of ticks

// A modal manager used to track and manage the state of open Modals.

// A native item (such as URL) dragged from inside the document

// A native item (such as file or URL) dragged from outside the document

// A number that uniquely identifies the current finger in the touch session.

// ASAP was originally a nextTick shim included in Q. This was factored out

// Access the stack to generate the error message including the error code

// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations

// ActiveX objects in IE.

// Add a flag to suppress these warnings for this special case.

// Add first word to line or word is too long to scaleToFit on existing line

// Add iOS momentum scrolling for iOS < 13.0

// Add methods to `Hash`.

// Add methods to `ListCache`.

// Add methods to `MapCache`.

// Add methods to `SetCache`.

// Add methods to `Stack`.

// Add remains of b.

// Add the error code to the name to include it in the stack trace.

// Add the next digit, k, to the result array.

// Add the number of digits of the first word of the digits array.

// Add the number of digits of the first word.

// Add zeros to make remainder as long as divisor.

// Advance the index before calling the task. This ensures that we will

// Alias methods names because people roll like that.

// Align at the center

// Allow `EventEmitter` to be imported as module namespace.

// Also consider allowing validation to be disabled.

// Also export as jsqubits to maintain backward compatibility

// Also for backward compatible since next/dynamic allows to resolve a component directly with loader

// Also see https://github.com/mui/mui-x/issues/8733

// Although message channels yield to any queued rendering and IO tasks, they

// Although setImmediate yields to the browser's renderer, it would be

// Amplitudes with magnitudes smaller than jsqubits.roundToZero this are rounded off to zero.

// An `NaN` primitive is the only value that is not equal to itself.

// An exception thrown by a task will permanently interrupt the processing of

// An optimized implementation for this simple case.

// And also, `mutate` relies on the useSWR hook to exist too.

// Any reducers that existed in both the new and old rootReducer

// Append zeros to xd if shorter.

// Are there any non-zero digits after the rounding digit?

// Are we oob?

// Argument reduction.

// Arguments:

// Array-as-queue is good enough here, since we are just dealing with exceptions.

// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass

// As a workaround, use cWM and cWRP to invoke the new static lifecycle.

// As a workaround, use cWU to invoke the new lifecycle.

// As the penultimate fallback, check if the values passed are primitive wrappers. This

// Assume cyclic values are equal.

// Assumes non-zero x and k, and hence non-zero result.

// Async and optimistically optimized update – it will not be executed if

// Avoid crashing if we missed a drop event or our previous drag died

// Avoid failures from read-only properties

// Avoid performing a layout computation in the render method.

// Avoid text selection

// Based on http://stackoverflow.com/a/22747272/680742, the browser with

// Based on https://github.com/mourner/quickselect

// Because for <= 15.x versions this might be a "prevContext" object.

// Because get-snapshot might return a falsy value.

// Because they would work differently between older and newer (16.3+) versions of React.

// Before Symbol spec.

// Binding "this" is important for shallow renderer support.

// Block the scroll even if no scrollbar is visible to account for mobile keyboard

// Bound the new value to the thumb's neighbours.

// Break condition - If we have evaluate all the ticks, then we are done.

// Break the formatted value into the integer “value” part that can be

// Browsers do not return `tabIndex` correctly for contentEditable nodes;

// Browsers not implementing :focus-visible will throw a SyntaxError.

// Browsers where the left scrollbar doesn't cause an issue report `0` for

// Buffer#write(string)

// Bump specificity to allow extending custom inputs

// But we should also take height into consideration

// By explicitly using `prop-types` you are opting into new production behavior.

// CHECK FUNCTIONS

// CONCATENATED MODULE: ../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+base@5.0.0-beta.31_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/base/Popper/popperClasses.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+base@5.0.0-beta.31_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/base/unstable_useModal/ModalManager.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+base@5.0.0-beta.31_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/base/utils/areArraysEqual.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+base@5.0.0-beta.31_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/base/utils/mergeSlotProps.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+base@5.0.0-beta.31_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/base/utils/omitEventHandlers.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+base@5.0.0-beta.31_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/base/utils/resolveComponentProps.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/AppBar/appBarClasses.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Backdrop/backdropClasses.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Button/buttonClasses.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/ButtonBase/buttonBaseClasses.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Card/cardClasses.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Dialog/dialogClasses.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/DialogActions/dialogActionsClasses.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/DialogContent/dialogContentClasses.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/FilledInput/filledInputClasses.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/FormHelperText/formHelperTextClasses.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/IconButton/iconButtonClasses.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Input/inputClasses.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/List/listClasses.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Menu/menuClasses.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/MenuItem/menuItemClasses.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Modal/modalClasses.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/NativeSelect/nativeSelectClasses.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/OutlinedInput/outlinedInputClasses.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Paper/paperClasses.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Popover/popoverClasses.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Radio/radioClasses.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Select/selectClasses.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Slider/sliderClasses.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/SvgIcon/svgIconClasses.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/ToggleButtonGroup/isValueSelected.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/ToggleButtonGroup/toggleButtonGroupClasses.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Toolbar/toolbarClasses.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Tooltip/tooltipClasses.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Typography/typographyClasses.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/internal/switchBaseClasses.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/utils/deprecatedPropType.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/utils/isMuiElement.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/utils/requirePropFactory.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/utils/unsupportedProp.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+system@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react@18.2.0/node_modules/@mui/system/esm/createStyled.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+system@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react@18.2.0/node_modules/@mui/system/esm/propsToClassKey.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+system@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react@18.2.0/node_modules/@mui/system/esm/styleFunctionSx/extendSxProp.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+system@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react@18.2.0/node_modules/@mui/system/esm/useThemeProps/getThemeProps.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+utils@5.15.4_@types+react@18.2.47_react@18.2.0/node_modules/@mui/utils/esm/deprecatedPropType.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+utils@5.15.4_@types+react@18.2.47_react@18.2.0/node_modules/@mui/utils/esm/getValidReactChildren.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+utils@5.15.4_@types+react@18.2.47_react@18.2.0/node_modules/@mui/utils/esm/isMuiElement.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+utils@5.15.4_@types+react@18.2.47_react@18.2.0/node_modules/@mui/utils/esm/requirePropFactory.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@mui+utils@5.15.4_@types+react@18.2.47_react@18.2.0/node_modules/@mui/utils/esm/unsupportedProp.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/createPopper.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/contains.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/getNodeName.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/getParentNode.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/getWindow.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/instanceOf.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/isLayoutViewport.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/isTableElement.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/enums.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/modifiers/applyStyles.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/modifiers/flip.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/modifiers/hide.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/modifiers/offset.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/modifiers/popperOffsets.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/modifiers/preventOverflow.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/utils/computeOffsets.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/utils/detectOverflow.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/utils/expandToHashMap.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/utils/getBasePlacement.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/utils/getVariation.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/utils/math.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/utils/mergePaddingObject.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/utils/orderModifiers.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/utils/rectToClientRect.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/utils/userAgent.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@popperjs+core@2.11.8/node_modules/@popperjs/core/lib/utils/within.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@react-dnd+asap@5.0.2/node_modules/@react-dnd/asap/dist/AsapQueue.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@react-dnd+asap@5.0.2/node_modules/@react-dnd/asap/dist/RawTask.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@react-dnd+asap@5.0.2/node_modules/@react-dnd/asap/dist/TaskFactory.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@react-dnd+asap@5.0.2/node_modules/@react-dnd/asap/dist/asap.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/@react-dnd+asap@5.0.2/node_modules/@react-dnd/asap/dist/makeRequestCall.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/clsx@1.2.1/node_modules/clsx/dist/clsx.m.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-array@3.2.4/node_modules/d3-array/src/ascending.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-array@3.2.4/node_modules/d3-array/src/bisect.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-array@3.2.4/node_modules/d3-array/src/bisector.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-array@3.2.4/node_modules/d3-array/src/descending.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-array@3.2.4/node_modules/d3-array/src/max.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-array@3.2.4/node_modules/d3-array/src/min.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-array@3.2.4/node_modules/d3-array/src/number.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-array@3.2.4/node_modules/d3-array/src/quantile.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-array@3.2.4/node_modules/d3-array/src/quickselect.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-array@3.2.4/node_modules/d3-array/src/range.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-array@3.2.4/node_modules/d3-array/src/ticks.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-color@3.1.0/node_modules/d3-color/src/color.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-color@3.1.0/node_modules/d3-color/src/define.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-format@3.1.0/node_modules/d3-format/src/exponent.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-format@3.1.0/node_modules/d3-format/src/formatDecimal.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-format@3.1.0/node_modules/d3-format/src/formatNumerals.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-format@3.1.0/node_modules/d3-format/src/formatRounded.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-format@3.1.0/node_modules/d3-format/src/formatTrim.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-format@3.1.0/node_modules/d3-format/src/formatTypes.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-format@3.1.0/node_modules/d3-format/src/identity.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-format@3.1.0/node_modules/d3-format/src/locale.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-format@3.1.0/node_modules/d3-format/src/precisionFixed.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-format@3.1.0/node_modules/d3-format/src/precisionPrefix.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-format@3.1.0/node_modules/d3-format/src/precisionRound.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-interpolate@3.0.1/node_modules/d3-interpolate/src/basis.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-interpolate@3.0.1/node_modules/d3-interpolate/src/basisClosed.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-interpolate@3.0.1/node_modules/d3-interpolate/src/color.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-interpolate@3.0.1/node_modules/d3-interpolate/src/constant.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-interpolate@3.0.1/node_modules/d3-interpolate/src/date.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-interpolate@3.0.1/node_modules/d3-interpolate/src/number.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-interpolate@3.0.1/node_modules/d3-interpolate/src/numberArray.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-interpolate@3.0.1/node_modules/d3-interpolate/src/object.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-interpolate@3.0.1/node_modules/d3-interpolate/src/piecewise.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-interpolate@3.0.1/node_modules/d3-interpolate/src/rgb.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-interpolate@3.0.1/node_modules/d3-interpolate/src/round.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-interpolate@3.0.1/node_modules/d3-interpolate/src/string.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-interpolate@3.0.1/node_modules/d3-interpolate/src/value.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-path@3.1.0/node_modules/d3-path/src/path.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-scale@4.0.2/node_modules/d3-scale/src/band.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-scale@4.0.2/node_modules/d3-scale/src/constant.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-scale@4.0.2/node_modules/d3-scale/src/continuous.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-scale@4.0.2/node_modules/d3-scale/src/diverging.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-scale@4.0.2/node_modules/d3-scale/src/identity.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-scale@4.0.2/node_modules/d3-scale/src/linear.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-scale@4.0.2/node_modules/d3-scale/src/log.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-scale@4.0.2/node_modules/d3-scale/src/nice.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-scale@4.0.2/node_modules/d3-scale/src/number.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-scale@4.0.2/node_modules/d3-scale/src/ordinal.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-scale@4.0.2/node_modules/d3-scale/src/pow.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-scale@4.0.2/node_modules/d3-scale/src/quantile.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-scale@4.0.2/node_modules/d3-scale/src/quantize.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-scale@4.0.2/node_modules/d3-scale/src/radial.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-scale@4.0.2/node_modules/d3-scale/src/sequential.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-scale@4.0.2/node_modules/d3-scale/src/sequentialQuantile.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-scale@4.0.2/node_modules/d3-scale/src/symlog.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-scale@4.0.2/node_modules/d3-scale/src/threshold.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-scale@4.0.2/node_modules/d3-scale/src/tickFormat.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-scale@4.0.2/node_modules/d3-scale/src/time.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-scale@4.0.2/node_modules/d3-scale/src/utcTime.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/area.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/curve/basis.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/curve/basisClosed.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/curve/basisOpen.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/curve/bump.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/curve/linear.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/curve/linearClosed.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/curve/monotone.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/curve/natural.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/curve/step.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/line.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/math.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/noop.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/offset/expand.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/offset/none.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/offset/silhouette.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/offset/wiggle.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/order/none.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/path.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/point.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/stack.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/symbol/asterisk.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/symbol/circle.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/symbol/diamond.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/symbol/star.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/symbol/triangle.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/symbol/triangle2.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/symbol/wye.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-time-format@4.1.0/node_modules/d3-time-format/src/locale.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-time@3.1.0/node_modules/d3-time/src/duration.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-time@3.1.0/node_modules/d3-time/src/millisecond.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-time@3.1.0/node_modules/d3-time/src/ticks.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/d3-time@3.1.0/node_modules/d3-time/src/week.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/dnd-core@16.0.1/node_modules/dnd-core/dist/actions/dragDrop/beginDrag.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/dnd-core@16.0.1/node_modules/dnd-core/dist/actions/dragDrop/drop.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/dnd-core@16.0.1/node_modules/dnd-core/dist/actions/dragDrop/endDrag.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/dnd-core@16.0.1/node_modules/dnd-core/dist/actions/dragDrop/hover.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/dnd-core@16.0.1/node_modules/dnd-core/dist/actions/dragDrop/index.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/dnd-core@16.0.1/node_modules/dnd-core/dist/actions/dragDrop/local/setClientOffset.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/dnd-core@16.0.1/node_modules/dnd-core/dist/actions/dragDrop/publishDragSource.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/dnd-core@16.0.1/node_modules/dnd-core/dist/actions/dragDrop/types.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/dnd-core@16.0.1/node_modules/dnd-core/dist/actions/registry.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/dnd-core@16.0.1/node_modules/dnd-core/dist/classes/DragDropManagerImpl.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/dnd-core@16.0.1/node_modules/dnd-core/dist/classes/DragDropMonitorImpl.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/dnd-core@16.0.1/node_modules/dnd-core/dist/classes/HandlerRegistryImpl.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/dnd-core@16.0.1/node_modules/dnd-core/dist/contracts.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/dnd-core@16.0.1/node_modules/dnd-core/dist/createDragDropManager.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/dnd-core@16.0.1/node_modules/dnd-core/dist/interfaces.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/dnd-core@16.0.1/node_modules/dnd-core/dist/reducers/dirtyHandlerIds.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/dnd-core@16.0.1/node_modules/dnd-core/dist/reducers/dragOffset.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/dnd-core@16.0.1/node_modules/dnd-core/dist/reducers/dragOperation.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/dnd-core@16.0.1/node_modules/dnd-core/dist/reducers/index.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/dnd-core@16.0.1/node_modules/dnd-core/dist/reducers/refCount.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/dnd-core@16.0.1/node_modules/dnd-core/dist/reducers/stateId.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/dnd-core@16.0.1/node_modules/dnd-core/dist/utils/coords.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/dnd-core@16.0.1/node_modules/dnd-core/dist/utils/dirtiness.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/dnd-core@16.0.1/node_modules/dnd-core/dist/utils/equality.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/dnd-core@16.0.1/node_modules/dnd-core/dist/utils/getNextUniqueId.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/dnd-core@16.0.1/node_modules/dnd-core/dist/utils/js_utils.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/dnd-core@16.0.1/node_modules/dnd-core/dist/utils/matchesType.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/goober@2.1.14_csstype@3.1.3/node_modules/goober/dist/goober.modern.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/internmap@2.0.3/node_modules/internmap/src/index.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/notistack@3.0.1_csstype@3.1.3_react-dom@18.2.0_react@18.2.0/node_modules/notistack/notistack.esm.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-dnd-html5-backend@16.0.1/node_modules/react-dnd-html5-backend/dist/BrowserDetector.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-dnd-html5-backend@16.0.1/node_modules/react-dnd-html5-backend/dist/EnterLeaveCounter.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-dnd-html5-backend@16.0.1/node_modules/react-dnd-html5-backend/dist/HTML5BackendImpl.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-dnd-html5-backend@16.0.1/node_modules/react-dnd-html5-backend/dist/MonotonicInterpolant.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-dnd-html5-backend@16.0.1/node_modules/react-dnd-html5-backend/dist/NativeDragSources/NativeDragSource.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-dnd-html5-backend@16.0.1/node_modules/react-dnd-html5-backend/dist/NativeDragSources/getDataFromDataTransfer.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-dnd-html5-backend@16.0.1/node_modules/react-dnd-html5-backend/dist/NativeDragSources/index.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-dnd-html5-backend@16.0.1/node_modules/react-dnd-html5-backend/dist/NativeDragSources/nativeTypesConfig.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-dnd-html5-backend@16.0.1/node_modules/react-dnd-html5-backend/dist/NativeTypes.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-dnd-html5-backend@16.0.1/node_modules/react-dnd-html5-backend/dist/OffsetUtils.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-dnd-html5-backend@16.0.1/node_modules/react-dnd-html5-backend/dist/OptionsReader.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-dnd-html5-backend@16.0.1/node_modules/react-dnd-html5-backend/dist/index.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-dnd-html5-backend@16.0.1/node_modules/react-dnd-html5-backend/dist/utils/js_utils.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-dnd@16.0.1_@types+node@20.11.0_@types+react@18.2.47_react@18.2.0/node_modules/react-dnd/dist/core/DndProvider.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-dnd@16.0.1_@types+node@20.11.0_@types+react@18.2.47_react@18.2.0/node_modules/react-dnd/dist/hooks/useCollectedProps.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-dnd@16.0.1_@types+node@20.11.0_@types+react@18.2.47_react@18.2.0/node_modules/react-dnd/dist/hooks/useCollector.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-dnd@16.0.1_@types+node@20.11.0_@types+react@18.2.47_react@18.2.0/node_modules/react-dnd/dist/hooks/useDrag/DragSourceImpl.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-dnd@16.0.1_@types+node@20.11.0_@types+react@18.2.47_react@18.2.0/node_modules/react-dnd/dist/hooks/useDrag/connectors.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-dnd@16.0.1_@types+node@20.11.0_@types+react@18.2.47_react@18.2.0/node_modules/react-dnd/dist/hooks/useDrag/useDrag.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-dnd@16.0.1_@types+node@20.11.0_@types+react@18.2.47_react@18.2.0/node_modules/react-dnd/dist/hooks/useDrag/useDragSource.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-dnd@16.0.1_@types+node@20.11.0_@types+react@18.2.47_react@18.2.0/node_modules/react-dnd/dist/hooks/useDrag/useDragSourceConnector.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-dnd@16.0.1_@types+node@20.11.0_@types+react@18.2.47_react@18.2.0/node_modules/react-dnd/dist/hooks/useDrag/useDragSourceMonitor.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-dnd@16.0.1_@types+node@20.11.0_@types+react@18.2.47_react@18.2.0/node_modules/react-dnd/dist/hooks/useDrag/useDragType.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-dnd@16.0.1_@types+node@20.11.0_@types+react@18.2.47_react@18.2.0/node_modules/react-dnd/dist/hooks/useDrag/useRegisteredDragSource.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-dnd@16.0.1_@types+node@20.11.0_@types+react@18.2.47_react@18.2.0/node_modules/react-dnd/dist/hooks/useDrop/DropTargetImpl.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-dnd@16.0.1_@types+node@20.11.0_@types+react@18.2.47_react@18.2.0/node_modules/react-dnd/dist/hooks/useDrop/connectors.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-dnd@16.0.1_@types+node@20.11.0_@types+react@18.2.47_react@18.2.0/node_modules/react-dnd/dist/hooks/useDrop/useAccept.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-dnd@16.0.1_@types+node@20.11.0_@types+react@18.2.47_react@18.2.0/node_modules/react-dnd/dist/hooks/useDrop/useDrop.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-dnd@16.0.1_@types+node@20.11.0_@types+react@18.2.47_react@18.2.0/node_modules/react-dnd/dist/hooks/useDrop/useDropTarget.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-dnd@16.0.1_@types+node@20.11.0_@types+react@18.2.47_react@18.2.0/node_modules/react-dnd/dist/hooks/useDrop/useDropTargetConnector.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-dnd@16.0.1_@types+node@20.11.0_@types+react@18.2.47_react@18.2.0/node_modules/react-dnd/dist/hooks/useDrop/useDropTargetMonitor.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-dnd@16.0.1_@types+node@20.11.0_@types+react@18.2.47_react@18.2.0/node_modules/react-dnd/dist/hooks/useDrop/useRegisteredDropTarget.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-dnd@16.0.1_@types+node@20.11.0_@types+react@18.2.47_react@18.2.0/node_modules/react-dnd/dist/hooks/useMonitorOutput.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-dnd@16.0.1_@types+node@20.11.0_@types+react@18.2.47_react@18.2.0/node_modules/react-dnd/dist/internals/DragSourceMonitorImpl.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-dnd@16.0.1_@types+node@20.11.0_@types+react@18.2.47_react@18.2.0/node_modules/react-dnd/dist/internals/DropTargetMonitorImpl.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-dnd@16.0.1_@types+node@20.11.0_@types+react@18.2.47_react@18.2.0/node_modules/react-dnd/dist/internals/SourceConnector.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-dnd@16.0.1_@types+node@20.11.0_@types+react@18.2.47_react@18.2.0/node_modules/react-dnd/dist/internals/TargetConnector.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-smooth@2.0.5_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/react-smooth/es6/Animate.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-smooth@2.0.5_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/react-smooth/es6/AnimateGroup.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-smooth@2.0.5_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/react-smooth/es6/AnimateManager.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-smooth@2.0.5_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/react-smooth/es6/configUpdate.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-smooth@2.0.5_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/react-smooth/es6/easing.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-smooth@2.0.5_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/react-smooth/es6/setRafTimeout.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-smooth@2.0.5_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/react-smooth/es6/util.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-transition-group@4.4.5_react-dom@18.2.0_react@18.2.0/node_modules/react-transition-group/esm/TransitionGroup.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/react-transition-group@4.4.5_react-dom@18.2.0_react@18.2.0/node_modules/react-transition-group/esm/utils/ChildMapping.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/recharts-scale@0.4.5/node_modules/recharts-scale/es6/getNiceTickValues.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/recharts-scale@0.4.5/node_modules/recharts-scale/es6/util/arithmetic.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/recharts-scale@0.4.5/node_modules/recharts-scale/es6/util/utils.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/cartesian/Bar.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/cartesian/Brush.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/cartesian/ReferenceArea.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/cartesian/ReferenceDot.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/cartesian/getEquidistantTicks.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/cartesian/getTicks.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/chart/AccessibilityManager.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/chart/generateCategoricalChart.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/component/Cursor.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/component/DefaultLegendContent.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/component/DefaultTooltipContent.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/component/Legend.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/component/Text.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/component/Tooltip.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/component/TooltipBoundingBox.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/shape/Cross.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/shape/Curve.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/shape/Symbols.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/shape/Trapezoid.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/util/BarUtils.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/util/ChartUtils.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/util/CssPrefixUtils.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/util/DetectReferenceElementsDomain.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/util/ReduceCSSCalc.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/util/TickUtils.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/util/cursor/getCursorPoints.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/util/cursor/getCursorRectangle.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/util/cursor/getRadialCursorPoints.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/util/getEveryNthWithCondition.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/util/isDomainSpecifiedByUser.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/util/tooltip/translate.js

// CONCATENATED MODULE: ../../node_modules/.pnpm/redux@4.2.1/node_modules/redux/es/redux.js

// CSS selector

// CUSTOM ERRORS

// Calculate a one-sided slope.

// Calculate element positioning

// Calculate the base 10 exponent from the base 1e7 exponent.

// Calculate the domain of number axis

// Calculate the slopes of the tangents (Hermite-type interpolation) based on

// Calculate the ticks by the number of grid when the axis is a number axis

// Calculate trial digit, k.

// Call a callback function. If there is an application specific algorithm

// Call this.constructor.gDSFP to support sub-classes.

// Can this type generate exponential notation?

// Can typed array instances can be augmented?

// Cancel move in case some other element consumed a mouseup event and it was not fired.

// Center vertically, height is 1em

// Certain fonts which overflow the line height will cause the textarea

// Check digits to determine which is the bigger number.

// Check if key is already down to avoid repeats being counted as multiple activations

// Check if module is in cache

// Check if the element collides with the next element

// Check if the horizontal axis needs shifting

// Check if the vertical axis needs shifting

// Check that cyclic values are equal.

// Check the input state on mount, in case it was filled by the user

// Check the target ids at the innermost position. If they are valid, add them

// Check whether the digit to the left of the rounding digit is odd.

// Checks are listed in order of commonality of use-case:

// Cleanup functions are executed lazily in React 17.

// Client component reference proxy need to be converted to a module.

// Client only

// Clone the event to not override `target` of the original event.

// Coerce booleans to `1` or `0` and dates to milliseconds.

// Coerce inputs to strings.

// Coerce regexes to strings and treat strings, primitives and objects,

// Coerce to Number.

// Common case.

// Compare digit by digit.

// Compare divisor and new remainder.

// Compare divisor and remainder.

// Compare exponents.

// Compare lengths.

// Compare product and remainder.

// Composite means it takes into account transforms as well as layout.

// Compute the padding.

// Compute the prefix and suffix.

// Compute the size before applying overflow hidden to avoid any scroll jumps.

// Computes the decimal coefficient and exponent of the specified number x with

// Constructors should match, otherwise there is potential for false positives

// Contain can be called between the component being unmounted and its cleanup function being run.

// Controlled input accepts its current value as a prop.

// Controlled系操作の対象量子ビットが合成系ではない場合、先にマージして合成系のQuantumState化する

// Convert day-of-week and week-of-year to day-of-year.

// Convert precision in number of base 10 digits to base 1e7 digits.

// Convert sd to decimal places.

// Copy 0 bytes; we're done

// CoreにQubitを登録する

// Corresponds to 10 frames at 60 Hz.

// Create a new layer, increase the isolation of the computed values

// Create a new module (and put it into the cache)

// Create and configure initial Decimal constructor.

// Create lookup table for `toString('hex')`

// Credit https://github.com/twbs/bootstrap/blob/488fd8afc535ca3a6ad4dc581f5e89217b6a36ac/js/src/util/scrollbar.js#L14-L18

// Custom components can no longer be wrapped directly in React DnD 2.0

// Cut out early if the target id has not been set. This should prevent errors

// DOM Element detected

// Decimal called without new.

// Decimal methods

// Decimal point?

// Decimal prototype methods

// Decimal.prototype object

// Decode in chunks to avoid "call stack size exceeded".

// Decrementing `while` showed faster results than either incrementing or

// Default base is 10.

// Define random() as a function so that clients can replace it with their own

// Delay the execution of the ripple effect.

// Deprecated! Use color.formatHex.

// Desktop to a lesser extent) that renders both setImmediate and

// Detect buggy property enumeration order in older V8 versions.

// Determine exponent.

// Determine if an Input is adorned on start.

// Determine if field is empty or filled.

// Determine if the toggle button value matches, or is contained in, the

// Determine leading zeros.

// Determine the sign. -0 is not less than 0, but 1 / -0 is!

// Determine trailing zeros.

// Disable cache population by default.

// Disable link interactions

// Do not render entry.value as functions. Always require static string properties.

// Dock to the bottom

// Dock to the left

// Dock to the right

// Dock to the top

// Does not strip trailing zeros.

// Does the angle go the wrong way? Flip the direction.

// Doing the other way around crash on IE11 "''" https://github.com/cssinjs/jss/issues/242

// Don't add zeros to yd if shorter as subtraction only needs to start at yd length.

// Don't block pointer events on the select under the icon.

// Don't proceed if `reference` or `popper` are not valid elements

// Don't publish the source just yet (see why below)

// Don't show a nice cursor but still prevent default

// Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.

// Dragging some elements, like <a> and <img> may still behave like a native drag event,

// Duplicate.

// E.g.

// E.g. 56700 becomes 56000 if 7 is the rounding digit.

// E.g. `Decimal.config({ precision: 20 });`

// ESM COMPAT FLAG

// EXPORTS

// EXTERNAL MODULE: ../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/extends.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js + 1 modules

// EXTERNAL MODULE: ../../node_modules/.pnpm/@babel+runtime@7.23.8/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/@emotion+react@11.11.3_@types+react@18.2.47_react@18.2.0/node_modules/@emotion/react/dist/emotion-react.browser.esm.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/@mui+base@5.0.0-beta.31_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/base/Portal/Portal.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/@mui+base@5.0.0-beta.31_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/base/utils/extractEventHandlers.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/@mui+base@5.0.0-beta.31_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/base/utils/isHostComponent.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/@mui+base@5.0.0-beta.31_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/base/utils/useSlotProps.js + 3 modules

// EXTERNAL MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Dialog/DialogContext.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/DialogTitle/dialogTitleClasses.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/FormControl/formControlState.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/InputBase/utils.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Popover/Popover.js + 1 modules

// EXTERNAL MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/ToggleButtonGroup/ToggleButtonGroupContext.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/styles/defaultTheme.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/styles/identifier.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/styles/styled.js + 6 modules

// EXTERNAL MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/styles/useThemeProps.js + 2 modules

// EXTERNAL MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/utils/capitalize.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/utils/createChainedFunction.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/utils/ownerDocument.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/utils/useControlled.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/@mui+material@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/utils/useEventCallback.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/@mui+system@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react@18.2.0/node_modules/@mui/system/esm/colorManipulator.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/@mui+system@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react@18.2.0/node_modules/@mui/system/esm/createTheme/createTheme.js + 3 modules

// EXTERNAL MODULE: ../../node_modules/.pnpm/@mui+system@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react@18.2.0/node_modules/@mui/system/esm/styleFunctionSx/styleFunctionSx.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/@mui+system@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react@18.2.0/node_modules/@mui/system/esm/useTheme.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/@mui+system@5.15.4_@emotion+react@11.11.3_@emotion+styled@11.11.0_@types+react@18.2.47_react@18.2.0/node_modules/@mui/system/esm/useThemeWithoutDefault.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/@mui+utils@5.15.4_@types+react@18.2.47_react@18.2.0/node_modules/@mui/utils/esm/ClassNameGenerator/ClassNameGenerator.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/@mui+utils@5.15.4_@types+react@18.2.47_react@18.2.0/node_modules/@mui/utils/esm/composeClasses/composeClasses.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/@mui+utils@5.15.4_@types+react@18.2.47_react@18.2.0/node_modules/@mui/utils/esm/deepmerge.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/@mui+utils@5.15.4_@types+react@18.2.47_react@18.2.0/node_modules/@mui/utils/esm/generateUtilityClass/generateUtilityClass.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/@mui+utils@5.15.4_@types+react@18.2.47_react@18.2.0/node_modules/@mui/utils/esm/generateUtilityClasses/generateUtilityClasses.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/@mui+utils@5.15.4_@types+react@18.2.47_react@18.2.0/node_modules/@mui/utils/esm/getScrollbarSize.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/@mui+utils@5.15.4_@types+react@18.2.47_react@18.2.0/node_modules/@mui/utils/esm/resolveProps.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/@mui+utils@5.15.4_@types+react@18.2.47_react@18.2.0/node_modules/@mui/utils/esm/setRef.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/@react-dnd+invariant@4.0.2/node_modules/@react-dnd/invariant/dist/index.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/@react-dnd+shallowequal@4.0.2/node_modules/@react-dnd/shallowequal/dist/index.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/clsx@2.1.0/node_modules/clsx/dist/clsx.mjs

// EXTERNAL MODULE: ../../node_modules/.pnpm/d3-scale@4.0.2/node_modules/d3-scale/src/band.js + 1 modules

// EXTERNAL MODULE: ../../node_modules/.pnpm/d3-scale@4.0.2/node_modules/d3-scale/src/init.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/d3-scale@4.0.2/node_modules/d3-scale/src/ordinal.js + 1 modules

// EXTERNAL MODULE: ../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/array.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/d3-shape@3.2.0/node_modules/d3-shape/src/constant.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/fast-deep-equal@3.1.3/node_modules/fast-deep-equal/index.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isFunction.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isNil.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/max.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/sortBy.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/upperFirst.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/index.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/react-dnd@16.0.1_@types+node@20.11.0_@types+react@18.2.47_react@18.2.0/node_modules/react-dnd/dist/core/DndContext.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/react-dnd@16.0.1_@types+node@20.11.0_@types+react@18.2.47_react@18.2.0/node_modules/react-dnd/dist/hooks/useCollectedProps.js + 2 modules

// EXTERNAL MODULE: ../../node_modules/.pnpm/react-dnd@16.0.1_@types+node@20.11.0_@types+react@18.2.47_react@18.2.0/node_modules/react-dnd/dist/hooks/useDragDropManager.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/react-dnd@16.0.1_@types+node@20.11.0_@types+react@18.2.47_react@18.2.0/node_modules/react-dnd/dist/hooks/useIsomorphicLayoutEffect.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/react-dnd@16.0.1_@types+node@20.11.0_@types+react@18.2.47_react@18.2.0/node_modules/react-dnd/dist/hooks/useOptionalFactory.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/react-dnd@16.0.1_@types+node@20.11.0_@types+react@18.2.47_react@18.2.0/node_modules/react-dnd/dist/internals/isRef.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/react-dnd@16.0.1_@types+node@20.11.0_@types+react@18.2.47_react@18.2.0/node_modules/react-dnd/dist/internals/registration.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/react-dom@18.2.0_react@18.2.0/node_modules/react-dom/index.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/react-hook-form@7.50.0_react@18.2.0/node_modules/react-hook-form/dist/index.esm.mjs

// EXTERNAL MODULE: ../../node_modules/.pnpm/react-smooth@2.0.5_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/react-smooth/es6/index.js + 9 modules

// EXTERNAL MODULE: ../../node_modules/.pnpm/react-transition-group@2.9.0_react-dom@18.2.0_react@18.2.0/node_modules/react-transition-group/index.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/react-transition-group@4.4.5_react-dom@18.2.0_react@18.2.0/node_modules/react-transition-group/esm/TransitionGroupContext.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/react@18.2.0/node_modules/react/index.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/cartesian/Bar.js + 1 modules

// EXTERNAL MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/cartesian/Line.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/cartesian/ReferenceLine.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/chart/generateCategoricalChart.js + 19 modules

// EXTERNAL MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/container/Layer.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/container/Surface.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/shape/Curve.js + 13 modules

// EXTERNAL MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/shape/Sector.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/util/ActiveShapeUtils.js + 1 modules

// EXTERNAL MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/util/ChartUtils.js + 86 modules

// EXTERNAL MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/util/DOMUtils.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/util/DataUtils.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/util/IfOverflowMatches.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/util/PolarUtils.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/util/ReactUtils.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/util/getLegendProps.js

// EXTERNAL MODULE: ../../node_modules/.pnpm/recharts@2.10.4_prop-types@15.8.1_react-dom@18.2.0_react@18.2.0/node_modules/recharts/es6/util/payload/getUniqPayload.js

// Edge

// Either 0?

// Either this is the first call, activity has stopped and we're at the

// Eliminate duplicated axes

// Emotion attaches all the styles as `__emotion_styles`.

// Empty buffer means no match

// Ensure the sign of `-0` is preserved.

// Ensure xd points to the longer array.

// Equivalent of `typeof` but with special handling for array and regexp.

// Equivalent to push, but avoids a function call.

// Error if any of these lifecycles are present,

// Estimate the precision increase necessary to ensure the first 4 rounding digits are correct.

// Even if we were, there is another bug in Internet Explorer 10.

// Event Handler Types -- Copied from @types/react/index.d.ts and adapted for Props.

// Execute the module function

// Exit early for strings to avoid a performance hit in some environments.

// Explicitly set the default value to solve a bug on IE11.

// Exponential form?

// Exported for backwards compatibility

// Expose `MapCache`.

// Expose the prefix.

// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.

// Fallback to originalResult (result without trimming) if we cannot find the

// Fallback to this default id when possible.

// Fast path for small integers.

// Fast path: If `val` fits into a single byte, use that numeric value.

// Fatal error conditions

// Filter out the `sx` style function from the previous styled component to prevent unnecessary styles generated by the composite components.

// Finally call hover on all matching targets.

// Finally, add the keys which didn't appear before any key in `next`

// Finally, search either indexOf (if dir is true) or lastIndexOf

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,

// Firefox 19+

// Firefox can dispatch this event in an infinite loop

// Firefox only cares if it's an image, but WebKit also wants it to be detached.

// Firefox wants us to check `-x` and `-y` variations as well

// Firefox won't drag without setting data

// First, attempt with faster native method

// Fix IE11 flexbox alignment. To remove at some point.

// Fix IE11 issue, to remove at some point.

// Fix IE11 width issue

// Fix Popper.js display issue

// Fix a bug on Chrome where the scroll isn't initially 0.

// Fix a bug with IE11 where the focus/blur events are triggered

// Fix conflict with bootstrap

// Fix conflict with normalize.css and sanitize.css

// Fix for https://github.com/facebook/react/issues/7769

// Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications

// Fixes https://github.com/popperjs/popper-core/issues/1223

// Fixes https://github.com/recharts/recharts/issues/2143

// Flag the module as loaded

// Flow doesn't support to extend this property, but it's the most

// For IE11 support

// For SI-prefix, the suffix is lazily computed.

// For each key of `next`, the list of keys to insert before that key in

// For example, "undefined" or "of type array"

// For example, formatDecimalParts(1.23) returns ["123", 0].

// For fixed precision, it must be in [0, 20].

// For high frequency updates (e.g. `resize` and `scroll` events), always

// For loop instead of findIndex because the latter is very slow in some browsers

// For more details: https://github.com/mui/material-ui/pull/37908

// For other targets, ask IE

// For reasons explained above, we are also unable to use `setImmediate`

// For server components `muiName` is avaialble in element.type._payload.value.muiName

// For significant precision, it must be in [1, 21].

// For some reason the animation is broken on Mobile Chrome if the size is even.

// Force coercion to uint32. This will also coerce falsey/NaN values to 0.

// Get all the valid discriminator values

// Get consecutive differences and slopes

// Get degree-1 coefficients

// Get degree-2 and degree-3 coefficients

// Get the draggable source

// Get the index of rd within w, adjusted for leading zeros.

// Get the index of rd within w.

// Get the length of the first word of the digits array xd.

// Get the number of digits of w.

// Get the offset of the anchoring element

// Get the rounding digit at index j of w.

// Get the size of the ripple

// Get the source client offset

// Get the step between two ticks

// Get the transform origin point on the element itself

// Get the union set of category axis

// Gets the closest ancestor positioned element. Handles some edge cases,

// Gets the entire size of the scrollable document area, even extending outside

// Gets the maximum area that the element is visible in due to any number of

// Give up, the result is false

// Given stepsize, evaluate whether every stepsize-th tick can be shown.

// HELPER FUNCTIONS

// Hack to get children with a negative margin to not falsify the height computation.

// Handle invocations in a tight loop.

// Handle string cases:

// Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.

// Hijack the default focus behavior.

// However, `flush` does not make any arrangements to be called again if an

// However, if we ever elect to use timers in Safari, the prevalent work-around

// However, note that even this simple case requires nuances to operate in a

// However, since this timer gets frequently dropped in Firefox

// However, they do not work reliably in Internet Explorer or Safari.

// IE 11 has no ShadowRoot

// IE doesn't support MIME types in setData

// IE requires this to fire dragover events

// IE11

// IE11, Edge (prior to using Bink?) use 'Esc'

// ISC license, Copyright 2018 Vladimir Agafonkin.

// Ideally we would adjust `isFocusVisible(event)` to look at `relatedTarget` for blur events.

// If <html> has a CSS width greater than the viewport, then this will be

// If GlobalStateSlot is changed, GLOBAL_STATE_CLASSES in

// If `Object.create(null)` is not supported we prefix the event names with a

// If a UNIX timestamp is specified, return it.

// If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.

// If a task schedules additional tasks recursively, the task queue can grow

// If a task throws an exception, `flush` ensures that its state will remain

// If a time zone is specified, all fields are interpreted as UTC and then

// If an accessor is specified, promote it to a comparator. In this case we

// If an anchor element wasn't provided, just use the parent body element of this Popover

// If an arguments tag, it should be treated as a standard object.

// If base 1e7 exponents differ...

// If by this time no drag source reacted, tell browser not to drag.

// If bytes.length is odd, the last 8 bits must be ignored (same as node.js)

// If child drag source refuses drag but parent agrees,

// If divisor < remainder.

// If either is zero...

// If exponents differ...

// If input's width is shrunk and it's not visible, don't sync height.

// If it can be shown, update the start

// If it can not, then increase the stepsize by 1, and try again.

// If it's reset after the mutation, we don't broadcast any state change

// If it's reset after the mutation, we don't broadcast any state change.

// If k is 0, there is no need to compare yd and rem again below, so change cmp to 1

// If neither are provided let the Modal take care of choosing the container

// If new component APIs are defined, "unsafe" lifecycles won't be called.

// If non-zero...

// If passed a ReactElement, clone it and attach this function as a ref.

// If product was < previous remainder.

// If source.beginDrag returns null, this is an indicator to cancel the drag

// If that was the last modal in a container, clean up the container.

// If the anchorEl prop is provided, use its parent body element as the container

// If the container prop is provided, use that

// If the fill character is "0", grouping is applied after padding.

// If the fill character is not "0", grouping is applied before padding.

// If the items are not non-nullish objects, then the only possibility

// If the items are strictly equal, no need to do a value comparison.

// If the modal we are adding is already in the DOM.

// If the month was not specified, inherit from the quarter.

// If the property has changed, update the state and mark rerender as

// If the property is accessed by the component, a rerender should be

// If the scaleContent is not a number, the coordinate will be NaN.

// If the start tangent is not coincident with (x0,y0), line to.

// If the target changes position as the result of `dragenter`, `dragover` might still

// If the type is array, than we need to add placeholders in the template for the overrides, variants and the sx styles.

// If the type is function, we need to define the default theme.

// If this is utcParse, never use the local timezone.

// If touch-action: none; is not supported we need to prevent the scroll manually.

// If we call `asap` within tasks scheduled by `asap`, the queue will

// If we don't see a visibility change within 100ms, it's probably a

// If y is a small integer use the 'exponentiation by squaring' algorithm.

// If yd is longer than xd, swap xd and yd so xd points to the longer array.

// If you want to use random values please consider the Birthday Problem: https://en.wikipedia.org/wiki/Birthday_problem

// If zero fill is specified, padding goes after sign and before digits.

// Ignore coincident points.

// Ignore everything but left-click

// Ignore non-index properties.

// Ignore the events not coming from the "backdrop".

// Ignore the scrollbar width

// Important!

// Improve scrollable dialog support.

// Improve type search style.

// In IE11 it is possible for document.activeElement to be null resulting

// In React 18, state updates in a ResizeObserver's callback are happening after

// In a web browser, exceptions are not fatal. However, to avoid

// In case the modal wasn't in the DOM yet.

// In some cases the user may want to override this behavior, e.g.

// In the context of a TransitionGroup all enters are really appears

// In this case, getSlotProps is responsible for calling the external event handlers.

// Inherently this is both subjective and assumptive, however

// Initial children should all be entering, dependent on appear

// Initial estimate.

// Initialise the result array with zeros.

// Initialize the coordinates using the client offset

// Initialize the full coordinates

// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of

// Inlined version of the `symbol-observable` polyfill

// Inputs and textareas should be selectable

// Inspired by https://github.com/focus-trap/tabbable

// Instead, we can look if the active element was restored on the BODY element.

// Instead, we periodically shift 1024 tasks off the queue.

// Integer.

// Internal constant.

// Internet Explorer 10 is the only browser that has setImmediate but does

// Interpolate

// Interpolate pairs of numbers in a & b.

// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.

// Invalid dates are coerced to `NaN`.

// Invalid ranges are not set to a default, so can range check early.

// Invoke the leading edge.

// Is a vertical scrollbar displayed?

// Is the digit to be rounded up in the first word of xd?

// Is the radius negative? Error.

// Is the rounding digit in the first word of xd?

// Is this a complete circle? Draw two arcs to complete the circle.

// Is this an integer type?

// Is this arc empty? We’re done.

// Is this path empty? Move to (x0,y0).

// Is this path empty? Move to (x1,y1).

// It also neatly avoids a situation where render() returns null

// It is not sufficient to assign `setImmediate` to `requestFlush` because

// It probably only makes sense when the bits make an adjacent block.

// It will pass a snapshot value to did-update though.

// It's a Transition like component

// It's corresponding to the left with LTR.

// It's most likely on issue on userland.

// Iterator will provide entry [k,v] tuples rather than values.

// Its name will be periodically randomized to break any code that depends on

// JavaScript numbers: -7

// JavaScript numbers: 21

// Just let it drag. It's a native type (URL or text) and will be picked up in

// Keep activeIndex in the bounds between 0 and the last coordinate index

// Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.

// Keyboard accessibility for non interactive elements

// Leading zero?

// Legacy `process.binding('util')` for Node.js < 10.

// Let's ignore that piece of logic if users are already overriding the width

// Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.

// Load entry module and return exports

// Looks like a Safari bug: dataTransfer.types is null, but there was no draggable.

// Make `instanceof Error` still work for returned errors.

// Make sure the event starts and ends on the same DOM element.

// Make the flex item shrink with Firefox

// Manually shift all values starting at the index back to the

// Map, Set, iterable, string, or anything else

// Math.sqrt underflow/overflow?

// Max k of 9007199254740991 takes 53 loop iterations.

// Maximum digits array length; leaves [28, 34] guard digits.

// Measure height of a textarea with a single row

// Measurement outcome is the "value" of the measured bits.

// MessageChannel useless for the purposes of ASAP.

// Minus sign?

// Missing `disableRestoreFocus` which is fine.

// Modals don't open on the server so this won't conflict with concurrent requests.

// Modified to be compatible with webpack 4 / Next.js

// Modifiers have the ability to reset the current update cycle. The

// Most of the logic is implemented in `SelectInput`.

// Most of these values can be changed during run-time using `Decimal.config`.

// Move to the next element.

// Multiple actions are dispatched here, which is why this doesn't return an action

// Multiply!

// Must use `global` or `self` instead of `window` to work in both frames and web

// MutationObservers, so we don't need to fall back in that case.

// NAMESPACE OBJECT: ../../node_modules/.pnpm/react-dnd-html5-backend@16.0.1/node_modules/react-dnd-html5-backend/dist/NativeTypes.js

// NAMESPACE OBJECT: ../../node_modules/.pnpm/victory-vendor@36.8.1/node_modules/victory-vendor/es/d3-scale.js

// NOTE: Want to continue on void and null returns!

// NOV(II), P. 443, 1990.

// NaN, ±Infinity

// Name the function so it is clearer in the documentation

// Native Symbol.

// Native select can't be selected either.

// Need a large enough difference to allow scrolling.

// Need a large enough difference to update the height.

// Need to use CSS Object Model (CSSOM) to be able to comply with Content Security Policy (CSP)

// Negative or zero?

// Never forget.

// New behavior only for users of `prop-types` package

// Newer versions of React will ignore that lifecycle if gSBU exists.

// Newer versions of React will ignore these lifecycles if gDSFP exists.

// Newton-Raphson iteration.

// No horizontal points are specified

// No need for transitions when the component is hidden

// No need for validFocusTarget check. The user does that by attaching it to

// No need to check for zero, as +x + +y != 0 && -x + -y != 0

// No need to display any value if the field is empty.

// No need to verify that "this.length <= MAX_UINT32" since it's a read-only

// No operation performed.

// No vertical points are specified

// Node allows for non-padded base64 strings (missing trailing ===), base64-js does not

// Node converts strings with length < 2 to ''

// Node strips out invalid characters like \n and \t from the string, base64-js does not

// Node takes equal signs as end of the Base64 encoding

// Node's code seems to be doing this and not & 0x7F..

// Node.js 0.10 has enumerable non-index properties on buffers.

// Non `Object` object instances with different constructors are not equal.

// Normalise xd and yd so highest order digit of yd is >= BASE/2

// Normalize byteOffset

// Normalize byteOffset: negative offsets start from the end of the buffer

// Normalize loader to return the module as form { default: Component } for `React.lazy`.

// Normalize val

// Not all elements in IE11 have a focus method.

// Note that the "Dustbin Stress Test" fails if this is not

// Note that this is only kept for the edge case where someone is passing in a promise as first argument

// Note that we might need to use this logic in production per https://github.com/WICG/resize-observer/issues/38

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:

// Note: cannot use `length < K_MAX_LENGTH` here because that fails when

// Now we are ready to publish the drag source.. or are we not?

// Numbers with massively different exponents would result in a very high number of zeros

// OR the last index of `val` in `buffer` at offset <= `byteOffset`.

// Object.prototype.hasOwnProperty.call

// Offsets are the actual position the popper needs to have to be

// Offsets can be applied only to the popper element

// Old call signature before `react-transition-group` implemented `nodeRef`

// Older versions will require our polyfilled will-update value.

// On each update cycle, the `modifiersData` property for each modifier

// On the first iteration only, check to see if rounding up gives the exact result as the

// On the server Emotion doesn't use React.forwardRef for creating components, so the created

// On visiting object, check for its dependencies and visit them recursively

// Once IE11 support is dropped the focus() call can be unconditional.

// Once a flush has been requested, no further calls to `requestFlush` are

// Only IE requires us to explicitly say

// Only handle left clicks

// Only invoke if we have `lastArgs` which means `func` has been

// Only perform calculations if using features that require them (multiline, scaleToFit)

// Only proceed if we have not handled it already.

// Only special HTML elements have these default behaviors.

// Only start adding at yd.length - 1 as the further digits of xd can be left as they are.

// Only trigger changes if the extents of the brush have actually changed

// Orders the modifiers based on their dependencies and `phase`

// Otherwise it's removed from the compiled code by optimisers

// Otherwise make sure the next top modal is visible to a screen reader.

// Otherwise, all fields are in local time.

// Otherwise, interpolate each of the numbers and rejoin the string.

// Over 80% of the iOS phones are compatible

// Overflow

// Pass x to Math.sqrt as integer, then adjust the exponent of the result.

// Perform in the willUpdate

// Perform the `toStringTag` check first to avoid errors with some

// Perform the initial formatting.

// PhantomJS 2 has enumerable non-index properties on typed arrays.

// Popper 1 is broken in this case and never had a bug report so let's assume

// Potentially swap the index if needed.

// Preact support, target is read only property on a native event.

// Prepare the ripple effect.

// Prepend zeros to equalise exponents.

// Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.

// Preserve the desired aspect ratio

// Prevent default "drop and blow away the whole document" action.

// Prevent iOS text selection on long-tap.

// Prevent infinite loop.

// Prevent leaking memory for long chains of recursive calls to `asap`.

// Prevent padding issue with fullWidth.

// Prevent padding issue with the Modal and fixed positioned AppBar.

// Prevent rounding of intermediate calculations.

// Prevent scroll of the page

// Prevent the app bar to be visible on each printed page.

// Prevent travellers from being on top of each other or overlapping

// Prevents scroll issue, waiting for Popper.js to add this style once initiated.

// Provide a fake value as Chrome might not let you access it for security reasons.

// QuantumStateの更新で、テンソル積の右側はbitIdが動くので更新する

// Qubitの初期化パラメータから、QuantumStateを生成する

// ROUND_CEIL       2 Towards +Infinity.

// ROUND_DOWN       1 Towards zero.

// ROUND_FLOOR      3 Towards -Infinity.

// ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.

// ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.

// ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.

// ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.

// ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.

// ROUND_UP         0 Away from zero.

// Reach 42px touch target, about ~8mm on screen.

// React <= 16.2 does not support getSnapshotBeforeUpdate.

// React <= 16.2 does not support static getDerivedStateFromProps.

// React may warn about cWM/cWRP/cWU methods being deprecated.

// React v16.11 and below

// React v16.12 and above

// React wouldn't have time to trigger a re-render so `focusVisible` would be stale.

// Rearrange xs and ys so that xs is sorted

// Receiving a mouse event in the middle of a dragging operation

// Recharts only supports angles when sizeKey === 'width'

// Reconstruct the final output based on the desired alignment.

// Rectangle props is expecting x, y, height, width as numbers, name as a string, and radius as a custom type

// Recursively compare arrays (susceptible to call stack limits).

// Recursively compare objects (susceptible to call stack limits).

// Recursively convert values (susceptible to call stack limits).

// Recursively flatten arrays (susceptible to call stack limits).

// Redefine target to allow name and value to be read.

// Reduce the iteration if the default slot props is empty

// Reduce the iteration if the slot props is empty

// Ref: https://github.com/emotion-js/emotion/blob/16d971d0da229596d6bcc39d282ba9753c9ee7cf/packages/styled/src/base.js#L186

// Reject Infinity/NaN.

// Related issue - https://github.com/facebook/react/issues/24331

// Remove IE11 arrow

// Remove excess digits.

// Remove from the content flow

// Remove leading zeros and adjust exponent accordingly.

// Remove leading zeros.

// Remove the margin in Safari

// Remove the padding in Firefox

// Remove the padding when type=search.

// Remove the title ahead of time.

// Remove those targetIds that don't match the targetType.  This

// Remove trailing zeros of last w.

// Remove trailing zeros.

// Removing webpack and modules means react-loadable won't try preloading

// Required for select\text-field height consistency

// Reset

// Reset 23pxthe native input line-height

// Reset Firefox invalid required input style

// Reset any `maxWait` timer.

// Reset default value

// Reset for Safari

// Reset global state in case the exception is caught.

// Reset iOS opacity

// Reset on mouse devices

// Reset on touch devices, it doesn't add specificity

// Reset the array, or remove it completely if we have no more listeners.

// Reset the name to the actual name.

// Resets for multiple select with chips

// Resize menu on `defaultOpen` automatic toggle.

// Response determines if label is presented above field or as placeholder.

// Restart the timer.

// Result exponent may be one less than e.

// Result is negative if x is negative and the last digit of integer y is odd.

// Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor

// Rethrow might be better if it's not the expected error but do we really

// Return 0 if either is 0.

// Return an augmented `Uint8Array` instance

// Return early if start > this.length. Done here to prevent potential uint32

// Return not function with Error if BigInt not supported

// Return the exports of the module

// Return the maximum integer which is smaller than 'value' when 'value' is greater than 1

// Return x if x is 0.

// Return x if y is zero and x is non-zero.

// Return x if y is zero.

// Return y if y is non-zero.

// Return y negated if x is zero.

// Returning false short-circuits our "each" method.

// Returns a string that is postfixed to a warning about an invalid type.

// Returns class name of the object, if any.

// Returns the composite rect of an element relative to its offsetParent.

// Returns the layout rect of an element relative to its offsetParent. Layout

// Reverse descending domains.

// Reverse the argument reduction.

// Round the offsets to the nearest suitable subpixel based on the DPR.

// SSR Fix (https://github.com/react-dnd/react-dnd/pull/813

// SVG

// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that

// Safari 6.0 has a problem where timers will get lost while the user is

// Safari 6.0.5 (at least) intermittently fails to create message ports on a

// Safari 9 has enumerable `arguments.length` in strict mode.

// Safari, on iOS, supports touch action since v13.

// Same logic as the LinearProgress track color

// Same logic as useAutocomplete.js

// SameValue algorithm

// Scale applied to prevent dot misalignment in Safari

// Search for a byte value [0-255]

// Search for the interval x is in, returning the corresponding y if x is one of the original xs

// Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.

// See `createPrimitiveTypeChecker`.

// See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.

// See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.

// See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/atan2

// See https://github.com/mui/material-ui/issues/31766

// See https://github.com/recharts/recharts/pull/2925

// See https://www.particleincell.com/2012/bezier-splines/ for derivation.

// See:

// See: https://en.wikipedia.org/wiki/Base64#URL_applications

// See: https://github.com/beatgammit/base64-js/issues/42

// See: https://github.com/feross/buffer/issues/154

// See: https://github.com/feross/buffer/issues/166

// See: https://github.com/feross/buffer/issues/219

// Server only

// Set activeTooltipIndex to the index with the same value as data.activeLabel

// Set role to img by default (can be overwritten)

// Set tabIndex to 0 by default (can be overwritten)

// Set the default precision if not specified,

// ShadowRoot detected

// Show and hide the placeholder logic

// Show user-specified drop effect.

// Signs differ?

// Simplified versions from Node, changed for Buffer-only usage

// Since CSS.supports is supported on all but Edge@12 and IE and touch-action

// Since this is a custom object, capture the string tag to determing its type.

// Skip configuration where the position is screen size invariant.

// Skip index properties.

// So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.

// So that VoiceOver's focus indicator matches the thumb's dimensions

// So the animation always start from the start.

// So the non active thumb doesn't show its label on hover.

// So we see the popover when it's empty.

// So we take precedent over the style of a native <a /> element.

// Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.

// Special case: looking for empty string/buffer always fails

// Special optimization for only a single match.

// Start all over with a larger stepsize

// Start the timer for the trailing edge.

// Stop the default behavior when we're not expecting a native item to be dropped.

// Store drag source node so we can check whether

// Store the reference and popper rects to be read by modifiers

// Strip optional 'ket' characters to support |0101>

// Strip out disabled modifiers

// Styles applied to the root element if `disablePointerEvents={true}`.

// Styles applied to the root element if `position="end"`.

// Styles applied to the root element if `position="start"`.

// Styles applied to the root element if `variant="filled"`.

// Subtract b from a.

// Subtract divisor from product.

// Subtract divisor from remainder.

// Subtract product from remainder.

// Subtract the number of trailing zeros of the last word.

// Subtract yd from xd.

// Support decoding URL-safe base64 strings, as Node.js does.

// Support for direct import(), eg: dynamic(import('../hello-world'))

// Support for having import as a function, eg: dynamic(() => import('../hello-world'))

// Support for passing options, eg: dynamic(import('../hello-world'), {loading: () => <p>Loading something</p>})

// Support html overflow-y: auto for scroll stability between pages

// Supports determination of isControlled().

// Supports x-axis of Date type

// Swallow the event, in case someone is listening for the escape key on the body.

// Sync update – it will always be executed, even if not necessary. This

// TODO fast estimate?

// TODO needs to verify dataKey is Function

// TODO v5 deprecate, v6 remove for sx

// TODO v6: Remove PopperComponent, PopperProps, TransitionComponent and TransitionProps.

// TODO v6: remove `Root` in the next major release

// TODO v6: remove `lowercaseFirstLetter()` in the next major release

// TODO v6: remove the second argument.

// TODO: Cause of circular dependency. Needs refactor.

// TODO: Find out if it would sometimes be faster to put one of the bit collections into a hash-set first.

// TODO: Remove use of `any` type.

// TODO: ScaleHelper

// TODO: check again if React releases their internal changes to focus event handling (https://github.com/facebook/react/pull/19186).

// TODO: check if displayName is valid.

// TODO: if we ever make a react-native version of this,

// TODO: remove fallback for next major

// TODO: remove support for Safari < 13.

// TODO: remove this export once ClassNameGenerator is stable

// TODO: update brush when children update

// Taylor series.

// Test for A's keys different from B.

// That could be the case for example with a PointScale and a string as domain.

// That update doesn't otherwise fire events, so we have to double check here.

// The "compact" mode is mainly used as the panorama within Brush

// The "n" type is an alias for ",g".

// The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or

// The AccessibilityManager relies on the Tooltip component. When tooltips suddenly stop existing,

// The Tooltip is active if the user has set isActive, or if the tooltip is active due to a mouse event.

// The `Select` component is a simple API wrapper to expose something better to play with.

// The abscissas of vertical grid lines

// The am-pm flag is 0 for AM, and 1 for PM.

// The argument reduction method above may result in overflow if the argument y is a massive

// The autoFocus of React might trigger the event before the componentDidMount.

// The blur won't fire when the disabled state is set on a focused input.

// The browsers will use the image intrinsic size under different conditions.

// The custom event handlers shouldn't be spread on the root element

// The default contents of x-axis is the serial numbers of data

// The default contents of y-axis is the domain of data

// The default type of x-axis is category axis,

// The default type of y-axis is number axis

// The disableEnforceFocus is set and the focus is outside of the focus trap (and sentinel nodes)

// The drag preview may either be attached via ref or connect function

// The drop target may either be attached via ref or connect function

// The element was already mounted.

// The event is MouseEvent

// The event is TouchEvent

// The exponent value at and above which `toString` returns exponential notation.

// The exponent value at and beneath which `toString` returns exponential notation.

// The expression `w % mathpow(10, n - j - 1)` returns all the digits of w to the right of the

// The fill of colors of grid lines

// The flush function processes all tasks that have been scheduled with

// The focus is already inside

// The forbidden HTML tags are the ones from ARIA specification that

// The handler doesn't take event.defaultPrevented into account:

// The height of the outer content

// The initial configuration properties of the Decimal constructor.

// The limit on the value of `precision`, and on the value of the first argument to

// The maximum number of significant digits of the result of a calculation or base conversion.

// The message channel technique was discovered by Malte Ubl and was the

// The modal might be closed before it had the chance to be mounted in the DOM.

// The module cache

// The mouseover event will trigger for every nested element in the tooltip.

// The native select doesn't respond to enter on macOS, but it's recommended by

// The natural logarithm of 10.

// The number of leading zeros of w is given by LOG_BASE - n.

// The ordinates of horizontal grid lines

// The orientation of axis

// The position of the next task to execute in the task queue. This is

// The primary input mechanism of the device includes a pointing device of limited accuracy.

// The radius of border

// The radius of four corners when radius is a number

// The radius of left-top, right-top, right-bottom, left-bottom when radius is an array

// The ratio between the rough step and the smallest number which has a bigger

// The react-loadable babel plugin will turn dynamic(import('../hello-world')) into dynamic(() => import('../hello-world'))

// The require function

// The rightmost point in the dataset should give an exact result

// The rounding mode used by default by `toInteger`, `toDecimalPlaces`, `toExponential`,

// The series converges faster the closer the argument is to 1, so using

// The simpler case - getSlotProps is not defined, so no internal event handlers are defined,

// The step should be a float number when the difference is smaller than 1

// The step which is easy to understand between two ticks

// The string returned by toExponential either has the form \d\.\d+e[-+]\d+

// The ticks

// The ticks set by user should only affect the ticks adjacent to axis line

// The tooltip should stay active when it was active in the previous render. If this is not

// The touch interaction occurs too quickly.

// The use of `Object#toString` avoids issues with the `typeof` operator

// The user can set isActive on the Tooltip,

// The value could be a number, the DOM will stringify it anyway.

// The value is most likely not a valid HTML attribute.

// The whatwg spec defines how the browser should behave but does not explicitly mention any events:

// The width or height of tick

// There is no point in displaying an empty tooltip.

// These recursive directive definitions must be deferred.

// These values must be integers within the stated ranges (inclusive).

// This action has a similiar effect to ActionTypes.INIT.

// This allows seamless integration with the most popular form libraries.

// This also ensures a stable sort in V8 and other engines.

// This behaves neither like String nor Uint8Array in that we set start/end

// This can happen when the tooltips suddenly stop existing as children of the component

// This check is necessary to prevent react-loadable from initializing on the server

// This doesn't work in IE11 due to https://github.com/facebook/react/issues/3751

// This element allow listening to the `Escape` key.

// This function will return the passed in props

// This hack is needed because the `__proto__` property is still inherited in

// This handles more types than `getPropType`. Only used for error messages.

// This handles the case when num is very small (0.00000001), js will turn this into 1e-8.

// This helps us achieve a neat API where user doesn't even know that refs

// This is cludgy.  Really should be using a forAll method.

// This is for `asap.js` only.

// This is for to force a repaint,

// This is necessary because Firefox and Safari will keep focus

// This is needed because the drag preview needs to be drawn or else it fires an 'mousemove' event

// This is non-exhaustive but covers the most common CSS properties that

// This is probably a native item type we don't understand.

// This is reasonably performant in modern environments like v8 and SpiderMonkey.

// This is the most basic placement, and will be adjusted by

// This is the reason such behavior is strictly opt-in.

// This is useful to prevent an error thrown in a task from stalling the event

// This modifier takes the styles prepared by the `computeStyles` modifier

// This needs to be a deep-equality check because some monitor-collected values

// This prevents infinite rendering loop.

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)

// This shouldn't be necessary, but there are weird race conditions with

// This will only be rendered on the server side

// Throw first error

// Timers are implemented universally.

// To detect a tab/window switch, we look for a blur event followed

// To detect wether there is any reference lines whose props alwaysShow is true

// To ensure persistent data, use `${name}#persistent`

// To make sure we don't execute the import without rendering first

// To make the animation happen,  we have to separate each rendering and avoid being processed as batched.

// To request a high priority event, we induce a mutation observer by toggling

// Touche devices

// Transform base

// Trigger a mutation, and also track the timestamp. Any mutation that happened

// Trim insignificant zeros.

// Trim off extra bytes after placeholder bytes are found

// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.

// Try to avoid assigning values and try to make zero exactly zero.

// Try to fast-path equality checks for other complex object types in the

// Try to guarantee the tail to be displayed

// Try values of root_y(n) starting at log2n and working your way down to 2.

// UNUSED EXPORTS: AnimateGroup, configBezier, configSpring

// UNUSED EXPORTS: ButtonBaseRoot

// UNUSED EXPORTS: ENTERED, ENTERING, EXITED, EXITING, UNMOUNTED

// UNUSED EXPORTS: MAX_VALUE_REG, MIN_VALUE_REG, getDomainOfErrorBars, getLegendProps, getStackedData, offsetPositive, offsetSign

// UNUSED EXPORTS: MaterialDesignContent, SnackbarContent, Transition, closeSnackbar, enqueueSnackbar

// UNUSED EXPORTS: MenuPaper

// UNUSED EXPORTS: NativeTypes, getEmptyImage

// UNUSED EXPORTS: PopoverRoot, getOffsetLeft, getOffsetTop

// UNUSED EXPORTS: SliderMark, SliderMarkLabel, SliderRail, SliderRoot, SliderThumb, SliderTrack, SliderValueLabel

// UNUSED EXPORTS: TypographyRoot

// UNUSED EXPORTS: compareFunnel, comparePie, compareScatter, getPropsFromShapeOption

// UNUSED EXPORTS: createDefaultState, getAxisMapByAxes

// UNUSED EXPORTS: overridesResolver

// UNUSED EXPORTS: testReset

// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and

// Update /system/styled/#api in case if this changes

// Update the remainder.

// Usage:

// Use !important to override the Modal inline-style.

// Use `util.types` for Node.js 10+.

// Use a for loop to avoid recursion

// Use built-in when available, missing from IE11

// Use computed style, here to get the real padding to add our scrollbar width.

// Use custom drag image if user specifies it.

// Use the clientRect sizes if it's not been transformed.

// Use the fastest means possible to execute a task in its own turn, with

// Use the incrementing value for client-side rendering only.

// Use the setState() updater to ensure state isn't stale in certain edge cases.

// Used to filter out mouse emulated events on mobile.

// Using flushSync ensures that the states is updated before the next pain.

// Usually we want to publish it in the next tick so that browser

// Utilizing the CSS.supports method to check if touch-action is supported.

// Visibility needed to hide the extra text area on iPads

// Warning: maxLength not taken into account in base64Write

// We also can't just check "__reactInternalSnapshot",

// We always will resolve, errors should be handled within loading UIs.

// We are using the mouseover event instead of the mouseenter event to fix a hide/show issue.

// We can skip rerendering when the tooltip is already open.

// We can't use it server-side.

// We disable the focus ring for mouse, touch and keyboard users.

// We dispatch a timeout with a specified delay of 0 for engines that

// We don't expect any of the above to throw, but better to be safe.

// We don't need to include them in the merged props because of this.

// We don't return `mutate` here as it can be pretty confusing (e.g. people

// We don't support changing that prop on an open FocusTrap

// We don't want to close the dialog when clicking the dialog content.

// We don't want to display the ripple for touch scroll events.

// We don't want to wait for the next render commit.

// We fall back to timers in workers in most engines, and in foreground

// We go 1 magnitude less, for safety

// We have to do something with node.scrollTop.

// We might render an empty child.

// We must throw the error here so we can catch and update the states.

// We need to account for this eventuality.

// We need to book keep the focused state manually.

// We need to check all keys in case some are required but missing from

// We need to handle both cases, but can't just check for the presence of "maybeSnapshot",

// We need to ignore the next contain as

// We need to update the position of the drawer when the direction change and

// We need to wait before we start listening for mousemove events.

// We queue errors to ensure they are thrown in right order (FIFO).

// We render a select. We can ignore the type provided by the `Input`.

// We still want to show ripple effect.

// We try to not inherit from `Object.prototype`. In some engines creating an

// We use a position absolute over a flexbox in order to forward the pointer events

// We use a timer in order to only show the ripples for touch "click" like events.

// We use our own heuristic for those browsers.

// We use the tabindex attribute to signal the available options.

// We would risk displaying two tooltips at the same time (native + this one).

// We'll have to wait for @3x to see if this is entirely correct

// What format function should we use?

// When 0 is inside the interval, 0 should be a tick

// When a categorical chart is combined with another chart, the value of chartX

// When a store is created, an "INIT" action is dispatched so that every

// When axis is a categorial axis, but the type of axis is number or the scale of axis is not "auto"

// When category axis has duplicated text, serial numbers are used to generate scale

// When interacting quickly, the text can end up selected.

// When less ticks can cover the interval, we should add some additional ticks

// When num is bigger than 1 or less than -1 it won't get converted to this notation so it's fine.

// When passed a node, call the hook straight away.

// When props are being spread in from a user defined component in Bar,

// When using a custom drag layer, the only way to prevent

// Whichever timer succeeds will cancel both timers and

// Will default to using width for aspect ratio

// Win specificity over the input base

// With Edge, Safari and Firefox, no focus related events are fired when the focused area stops being a focused area.

// With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.

// Word can be added to an existing line

// Work around @2x coordinate discrepancies in browsers

// Work around Safari 8 positioning bug

// Workaround a "ResizeObserver loop completed with undelivered notifications" error

// Workaround for https://github.com/facebook/react/issues/7769

// Workaround for https://github.com/facebook/react/issues/9023

// Would love a way to avoid disabling this rule, but we need

// Writing a hex string, for example, that contains invalid characters will

// Zero.

// Zero?

// ZodObject<

// Zooming can change the DPR, but it seems to report a value that will

// \packages\api-docs-builder\utils\parseSlotsAndClasses.ts must be updated accordingly.

// __webpack_public_path__

// `.offsetParent` reports `null` for fixed elements, while absolute elements

// `2` may be desired in some cases – research later

// `Decimal.rounding = 4;`

// `Decimal.rounding = Decimal.ROUND_HALF_UP;`

// `NaN` is uniquely not equal to itself, we can use self-comparison of

// `Object.keys(slots)` can't be wider than `T` because we infer `T` from `slots`.

// `call`, just like a function.

// `defaultOpen` and `openState` are ignored to avoid unnecessary callbacks.

// `initial`

// `isArray()` works on subclasses and is cross-realm, so we can avoid capturing

// `isOpenControlled` is ignored because the component should never switch between controlled and uncontrolled modes.

// `isPlainObject` only checks against the object's own realm. Cross-realm

// `isTypedArray()` works on all possible TypedArray classes, so we can avoid

// `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247

// `process.on("uncaughtException")` or by a domain.

// `rawAsap` unless and until one of those tasks throws an exception.

// `requestFlush` is implemented using a strategy based on data collected from

// `requestFlush` requests that the high priority event queue be flushed as

// `setImmediate` must be called *by name* and therefore must be wrapped in a

// `setTimeout` does not call the passed callback if the delay is less than

// `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.

// `toFixed`, `toPrecision` and `toSignificantDigits`.

// a pointerEvents: all is applied in the collapse component

// a string precedes the next number in b

// a task throws an exception.

// add issues from dirty option

// allows for nested Transitions

// along with x, y, height as numbers, name as a string, and radius as number | [number, numbe, number, number]

// also handles Invalid Date

// amendments. These decisions, particularly to marginalize MessageChannel and

// an alias (using an arrow function was what caused 2651).

// an event 20 times per second until it succeeds.

// and applies them to the HTMLElements such as popper and arrow

// and chartY may beyond the boundaries.

// and height. In this case, though, returning null from render()

// and hitting left arrow to move the cursor in a text input etc.

// and we respect the user to enable customisation.

// animation duration

// any flickering

// any other slot specified

// anymore

// anyway.

// appears to be generally consistent.

// approximately 7 in web workers in Firefox 8 through 18, and sometimes not

// are being used under the hood.

// are running

// aria-hidden because the dom element doesn't exist either

// arrow is optional + virtual elements

// as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring

// as soon as a modal is adding its modalRef is undefined. it can't set

// assume utf8

// avoid extra slice()

// back into ASAP proper.

// base64 is 4/3 + up to two characters of the original data

// based on https://github.com/WICG/focus-visible/blob/v4.1.5/src/focus-visible.js

// because this.closeSnackbar called this function

// begin flushing on the next task the task throws an error.

// beginning of the queue.

// between class and subclass or custom object and POJO.

// between events.

// bitIdの扱いが異なるため、リストはテンソル積の左・右を別個に持つ必要がある

// both objects, which is faster than `isNaN()`.

// broad spectrum of browsers.

// but it is based on a constant that will never change at runtime

// byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer

// calculate the middle value

// calculate the middle value of ticks

// calculate total length error

// call `rawAsap.requestFlush` if an exception is thrown.

// call individual snackbar onClose callback passed through options parameter

// calling `mutate` but they actually mean `trigger`).

// calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed

// can be children of body and can't have aria-hidden attribute.

// can be string

// can reliably accommodate that request. This will usually be snapped

// can test whether the search value is (self-) comparable. We can’t do this

// candidate group value.

// capturing the string tag or comparing against all possible constructors.

// cause everything after the first invalid character to be ignored. (e.g.

// cf. https://www.w3.org/TR/html-aria/#docconformance

// character to make sure that the built-in object properties are not

// cheap lodash replacements

// check for visited object

// check that specially as object equality is likely to fail

// check that this isn't another touchstart due to multitouch

// checking against potential state variable does not suffice if we focus and blur synchronously.

// class name could be used further down

// cleanly divide the values into the appropriate subpixels.

// clear the hash so this node won't be recognizable as rehydratable by other <Global/>s

// clicking a checkbox to check it, hitting a button to submit a form,

// clipping (or hiding) overflowing elements with a position different from

// clipping parents

// closure.

// cmp is -1.

// coercion fail below.

// coming from build/babel/plugins/react-loadable-plugin.js

// comparisons are rare, and will be handled in the ultimate fallback, so

// component stays as a function. This condition makes sure that we do not interpolate functions

// consistent and will resume where it left off when called again.

// console.log('entering', key)

// console.log('leaving', key)

// console.log('unchanged', key)

// const AugmentFactory =

// const clipPathId = isNil(id) ? this.id : id;

// const instanceOfType = <T extends new (...args: any[]) => any>(

// container itself is invisible and should not block clicks, clicks should be passed to its children

// contexts in the following browsers.

// copies of the 'buffer' package in use. This method works even for Buffer

// copy over the last transition props;

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)

// cost of anonymous callbacks.

// create a containing block.

// current match in a

// current match in b

// debounced at least once.

// decide if it should reanimate with initial from style when props change

// declare here to prevent spreading to DOM

// decrementing `for` loop and than an incrementing `while` loop. Declarative

// define getter function for harmony exports

// digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression will give

// dirty hack (for recharts' test)

// divisor < 1e7

// divisor >= 1e7

// do not edit .js files directly - edit src/index.jst

// do nothing

// don't hoist over string (html) components

// done when the component updates

// down

// downstream bundlers may remove unnecessary concatenation, but won't remove toString call -- Workaround for https://github.com/webpack/webpack/issues/14814

// dragenter handler.

// e is the base 10 exponent.

// e.g.

// e.g. heroicons uses fill="none" and stroke="currentColor"

// e.g. https://bugzilla.mozilla.org/show_bug.cgi?id=559561.

// earlier this timestamp should be ignored.

// effective way to apply styles to an HTMLElement

// either ensure that no exceptions are thrown from your task, or to manually

// eliminate undefined or null or empty string

// empty

// encode to utf16 (surrogate pair dance)

// encode utf8

// end of current subpath

// error bar for horizontal charts, the x is fixed, y is a range value

// error bar for horizontal charts, the y is fixed, x is a range value

// eslint-disable-line no-empty

// eslint-disable-line no-new-wrappers

// eslint-disable-line no-self-compare

// eslint-disable-line no-unused-expressions

// eslint-disable-next-line @typescript-eslint/naming-convention

// eslint-disable-next-line @typescript-eslint/no-empty-function

// eslint-disable-next-line @typescript-eslint/no-this-alias

// eslint-disable-next-line @typescript-eslint/no-unused-vars

// eslint-disable-next-line @typescript-eslint/no-use-before-define

// eslint-disable-next-line ban/ban

// eslint-disable-next-line import/no-unused-modules

// eslint-disable-next-line no-prototype-builtins

// eslint-disable-next-line no-restricted-imports

// eslint-disable-next-line no-self-assign

// eslint-disable-next-line no-underscore-dangle

// eslint-disable-next-line react-hooks/exhaustive-deps

// eslint-disable-next-line react-hooks/rules-of-hooks -- `React.useId` is invariant at runtime.

// eslint-disable-next-line react/no-array-index-key

// eslint-disable-next-line react/no-did-update-set-state

// eslint-disable-next-line react/prop-types

// even if the current drag event matches a user-defined type.

// even then.

// event.preventDefault() is meant to stop default behaviors like

// events in browsers.

// every available SauceLabs Selenium web driver worker at time of writing.

// exception is thrown by a task, that the task queue will continue flushing as

// exception is thrown.

// exchange

// execute the callback.

// exp(0) = 1

// expose the module cache

// expose the modules object (__webpack_modules__)

// extend<

// falls through

// filter nulls

// filter props for Transtition

// find coordinate of category axis by the value of category

// first function can receive multiply arguments

// fixes shallow isOver which would only be non-shallow because of

// focusable events only.

// for "a" so this is checking that

// for a comparator (except for specific, known comparators) because we can’t

// for more details.

// for string (html) tag, preserve the behavior in emotion & styled-components.

// from the name.

// function makeRequestCallFromMessageChannel(callback) {

// function makeRequestCallFromSetImmediate(callback) {

// function using ln(x*10^e) = ln(x) + e*ln(10).

// get data by activeIndex when the axis don't allow duplicated category

// get dispatched despite target being no longer there. The easy solution is to check

// get union set and add compatible prefix

// getDefaultExport function for compatibility with non-harmony modules

// getSnapshotBeforeUpdate(prevProps) {

// go through the array every three bytes, we'll deal with trailing stuff later

// graphic child has data props

// grouped, and fractional or exponential “suffix” part that is not.

// grow, but to avoid an O(n) walk for every task we execute, we don't

// has dataKey in <Axis />

// have WebKitMutationObserver but not un-prefixed MutationObserver.

// height. This ensures a tappable area outside of the simple menu with which to dismiss

// http://fb.me/prop-types-in-prod

// http://www.nonblocking.io/2011/06/windownexttick.html

// https://bugs.chromium.org/p/chromium/issues/detail?id=661108&q=contenteditable%20tabindex&can=2

// https://bugs.chromium.org/p/v8/issues/detail?id=3056

// https://bugs.chromium.org/p/v8/issues/detail?id=4118

// https://caniuse.com/#search=touch-action

// https://codesandbox.io/p/sandbox/button-keyup-preventdefault-dn7f0

// https://codesandbox.io/p/sandbox/mui-pr-22247-forked-h151h?file=/src/App.js

// https://css-tricks.com/snippets/css/force-vertical-scrollbar/

// https://developer.mozilla.org/en-US/docs/Web/API/Window/innerWidth#usage_notes

// https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block

// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593

// https://en.wikipedia.org/wiki/Content_Security_Policy

// https://github.com/emotion-js/emotion/blob/26ded6109fcd8ca9875cc2ce4564fee678a3f3c5/packages/styled/src/utils.js#L40

// https://github.com/feross/buffer/pull/148

// https://github.com/jamiebuilds/react-loadable/blob/v5.5.0/src/index.js

// https://github.com/kriskowal/q/issues/396

// https://github.com/mui/material-ui/issues/13485#issuecomment-676048492

// https://github.com/popperjs/popper-core/issues/1078

// https://github.com/popperjs/popper-core/issues/837

// https://github.com/react-dnd/react-dnd/issues/1310

// https://github.com/reactjs/react-transition-group/pull/749

// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js

// https://html.spec.whatwg.org/multipage/interaction.html#focus-fixup-rule.

// https://m2.material.io/components/menus#specs > Dense

// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034

// https://www.w3.org/WAI/ARIA/apg/patterns/combobox/examples/combobox-select-only/

// i is where to slice str to get the first word of the digits array.

// i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if

// if children is a function and animation is not active, set style to 'to'

// if cmp === 1, k will be 0

// if dragend handler does something like showing an alert.

// if it's added, the focus event should be forwarded to the prop

// if it's added, this should be added: this.props.onKeyDown(e);

// if lineLength is 0 return the default when no strokeDasharray is provided

// if maxHeight is set, overwrite if calculatedHeight is greater than maxHeight

// if nothing has changed then don't resubscribe

// if open event.stopImmediatePropagation

// if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.

// if the domain is defaulted we need this for `originalDomain` as well

// if the focus event is not coming from inside the children's react tree, reset the refs

// if there are 1 or less ticks ticks then the active tick is at index 0

// if there are no tooltips, since that will cause unexpected behavior of users.

// if this doesn't exist then it will be null so the style element will be appended

// if we are mounting and running this it means appear _must_ be set

// immediately in some browsers.

// import { RadiusAxisProps, AngleAxisProps } from '../polar/types';

// in August 2020.

// in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default

// in Safari 9 which returns 'object' for typed arrays and other constructors.

// in case we cannot find the element

// in nodeToRestore.current being null.

// in test.

// in the same tick for the source element, and browser freaks out.

// include XYCoord objects that may be equivalent, but do not have instance equality.

// inclusive stop

// incorrect for RTL.

// index in s

// insert keyframes

// instance in this way is faster than calling `Object.create(null)` directly.

// instanceof

// instances that were created from another copy of the `buffer` package.

// instead of `instanceof` because it is more performant for the common

// interpolate non-matching numbers

// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].

// into this ASAP package. It was later adapted to RSVP which made further

// invalid hex

// is able to screenshot the current (not yet dragging) state.

// is empty. Make it non-empty to avoid this issue.

// is filled with the initial data specified by the modifier. This means

// is supported on both Edge@12 and IE if CSS.supports is not available that means that

// is surrogate component

// is to add a scroll event listener that calls for a flush.

// is useful for low frequency updates where sync behavior simplifies the

// is very rare in modern JS, which is why it is deprioritized compared to all other object

// isControlled is ignored in the hook dependency lists as it should never change.

// it as the trailing edge, or we've hit the `maxWait` limit.

// it can cause errors. We use this function to check. We don't want arrow keys to be processed

// it doesn't persist and is fresh on each update.

// it is removed from DOM and trigger endDrag manually.

// it will try to move the focus back to the rootRef element.

// it's a lowercase character

// it's effectively like having two implementations and switching them out

// it's not an issue. I don't think anyone ever specifies width on <html>

// it's not behavior of the native <option> and causes

// item and use the first valid item as a fallback

// item hasn't changed transition states

// item is new (entering)

// item is old (exiting)

// j > 0 means i > number of leading zeros of w.

// j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).

// jsdom doesn't support innerText

// jsqubits.QState.prototype.random = function() {.....};

// k is the carry.

// k will be how many times the divisor goes into the current remainder.

// last char was a lead

// later be divided by this number, then separate out the power of 10 using

// length is NaN (which is otherwise coerced to zero.)

// less than 1y!

// limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.

// ln(-x) = NaN

// ln(0) = -Infinity

// ln(1) = 0

// ln(a*10^b) = ln(a) + b*ln(10).

// ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b

// ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)

// log[-b](x) = NaN

// log[0](x)  = NaN

// log[1](x)  = NaN

// log[b](-x) = NaN

// log[b](0) = -Infinity

// log[b](1) = 0

// logic was previously ran for the previous placement and is therefore

// logic.

// lower priority turn.

// magic number of faking previous x and y location

// magic number to prevent infinite loop

// map of axisId to axis for a specific axis type

// max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).

// max n is 6 (gives 0.7 - 1.3)

// means it doesn't take into account transforms.

// means it has ended and the drag source node disappeared from DOM,

// merge<

// merge<Incoming extends AnyZodObject>(

// methods like `some` / `every` were not used to avoid incurring the garbage

// most common use case for this is the `flip` modifier changing the

// multiply the argument by itself until the leading digits of the significand are 7, 8, 9,

// must be multiple of 3

// mutation observers, so that implementation is used instead.

// n: the number of digits of w.

// necessary until the next `flush` completes.

// need delete and wipe from mapQubitQuantumState

// needed.

// needing to be prepended, but this can be avoided while still ensuring correct rounding by

// never return negative values for height and width

// newCtx is used to not collect issues from inner types in ctx

// nextStatus will always be ENTERING or EXITING.

// nines may infinitely repeat.

// no enter animation skip right to ENTERED

// no exit animation skip right to EXITED

// no lead yet

// no tabbable elements in the trap focus or the focus was outside of the focus trap

// node is `undefined` when user provided `nodeRef` prop

// non-matching targets.

// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].

// not have MutationObservers.

// not necessary (debounced to run at most once-per-tick)

// not used by this implementation

// note: ignores next directive

// notranslate needed while Google Translate will not fix zero-width space issue

// number interpolators

// number transform to string

// number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this

// numbers in a & b match

// of the `<html>` and `<body>` rect bounds if horizontally scrollable

// of the menu.

// of them being equal but not strictly is if they are both `NaN`. Since

// offset according to the specified time zone.

// on a disabled element:

// onEnterXxx and onExitXxx callbacks have a different arguments.length value.

// one of the sentinel nodes was focused, so move the focus

// or auto filled by the browser before the hydration (for SSR).

// or clamp the specified precision to the supported range.

// or throw because it's discarded.

// order based on dependencies

// order based on phase

// order matters. first callbacks.onEntered to set entered: true,

// order of magnitudes than the rough step

// original foundation for this library.

// otherwise our MenuItems dispatches a click event

// otherwise we will only clear a single timer when unmounting while two

// overridden or used as an attack vector.

// pad the end with zeros, but make sure to not forget the extra bytes

// page's first load. Thankfully, this version of Safari supports

// placement, which then needs to re-run all the modifiers, because the

// points of area

// pow(0, y < 0) = Infinity

// pow(0, y > 0) = 0

// pow(1, y) = 1

// pow(x < 0, y non-integer) = NaN

// pow(x, 0) = 1

// pow(x, 1) = x

// prefer the async Popper#update method

// preferrable to falling back to setTimeout since it does not have

// preserved between calls to `flush` so that it can be resumed if

// priority over other events including IO, animation, reflow, and redraw

// private

// product = divisor * trial digit.

// product > remainder.

// properly positioned near its reference element

// properties

// property of a typed array.

// props priority: `inProps` > `contextProps` > `themeDefaultProps`

// props.

// props.viewBox is sometimes generated every time -

// public for test

// qubitsの順序で紐づいたQubitQuantumStateMapElementを取得する

// queue if the exception handled by Node.js’s

// rapidly by a visibility change.

// rawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer

// rd: the rounding digit, i.e. the digit after the digit that may be rounded up.

// react-transition-group#onExited

// reducer returns their initial state. This effectively populates

// ref objects should be passed straight through without wrapping

// regular focus change.

// relevant info - https://github.com/facebook/react/blob/2807d781a08db8e9873687fccc25c0f12b4fb3d4/packages/react/src/ReactLazy.js#L45

// reliably in a browserify context because there could be multiple different

// remove duplicated category

// replacement char (U+FFFD) and advance only 1 byte

// require.resolveWeak check is needed for environments that don't have it available like Jest

// required

// restoreLastFocus()

// return first issue-free validation if it exists

// return invalid

// return start animation method

// return stop animation method

// return the containing block

// return the node so it can be chained (e.g. when within callback refs

// return value is ignored

// reversing items to affect render order (for layering)

// root should come after others to override maxWidth

// run catchall validation

// run the map function here instead so that the key is the computed one

// same realm to avoid capturing the string tag. Strict equality is used

// scaleValues are a list of coordinates. For example: [65, 250, 435, 620, 805, 990].

// scan index for next number in b

// screensize shrink.

// scrolling. This problem does not impact ASAP because Safari 6.0 supports

// setState callbacks and unmounting in testing, so always make sure that

// shift tasks off the queue after they have been executed.

// should not use createChainedFunction for onClose.

// significant digits p, where x is positive and p is in [1, 21] or undefined.

// since we inject focus related props into children we have to do a lookahead

// slowing down the queue of pending tasks, we rethrow the error in a

// so Buffer.isBuffer(Buffer.prototype) will be false

// so if they don't have a tabindex attribute specifically set, assume it's 0.

// so it's not actually breaking anything

// so that we don't need to depend on findDOMNode() from react-dom.

// so the browser didn't dispatch the dragend event.

// so we can simply merge all the props without having to worry about extracting event handlers.

// so we don't have to add it to registered cache.

// some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.

// soon as possible, but if you use `rawAsap` directly, you are responsible to

// soon as possible.

// source: https://stackoverflow.com/questions/49875255

// specZ: The maximum height of a simple menu should be one or more rows less than the view

// specifically check for Brush - if it exists and the start and end indexes are different, re-render with the new ones

// sqrt(-x) = NaN

// stale/incorrect

// start of current subpath

// step into the shadow DOM of the parent of a slotted node

// string constants and placeholders

// string preceding current number in b, if any

// subsequent tasks. The higher level `asap` function ensures that if an

// such as table ancestors and cross browser bugs.

// support both `slots` and `components` for backward compatibility

// support for disabling server side rendering, eg: dynamic(() => import('../hello-world'), {ssr: false}).

// suppress the useLayoutEffect warning on server side.

// sync with `height` in `legend` styles

// sync with `lineHeight` in `legend` styles

// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera

// tell if the comparator is symmetric, and an asymmetric comparator can’t be

// that causes it, under certain circumstances, to provide the same value for

// the <svg> will define the property that has `currentColor`

// the `instanceof` check but they should be treated as of that type.

// the axis is a categorical axis

// the axis we are currently formatting

// the bottom line

// the case, the tooltip disappears and immediately re-appears, causing a flickering effect

// the combined list

// the default drag preview from drawing in IE is to screenshot

// the dragging state in which the node itself has zero opacity

// the field type is category data and this axis is categorical axis

// the field type is category data and this axis is numerical axis

// the field type is numerical

// the following paper: Steffen, M. 1990. A Simple Method for Monotonic

// the initial state tree.

// the left line of |--|

// the lowest limit is Chrome, with 0x10000 args.

// the menu.

// the middle line

// the middle line of |--|

// the minimum 4ms penalty.

// the modifiers in the next step

// the new state tree with any relevant data from the old one.

// the paint, this leads to an infinite rendering.

// the prop types of an SVGElement have these typed as something else.

// the right line of |--|

// the select to close immediately since we open on space keydown

// the string tag or doing an `instanceof` check.

// the text of a text node between "1" and "-1".

// the top line

// the tree but if it's a string tag, we know it won't

// then handleEntered to check if there's a request for closing

// there are no focusable items within the list.

// they had leading zeros)

// this (e.g. Edge 2019, IE11, Safari)

// this improves memory usage since we can avoid storing the whole style string

// this is a quicker (but less type safe) way to save quite some bytes from the bundle

// this is safe because grey does not change between default light/dark mode

// ticks are distributed in a circle

// ticks are distributed in a single direction

// to a 4 milisecond delay, but once we're flushing, there's no delay

// to avoid it. If k is 1 there is a need to compare yd and rem again below.

// to capture the MutationObserver implementation in a closure, were integrated

// to check if there is a `selected` item. We're looking for the last `selected`

// to detect a Buffer instance. It's not possible to use `instanceof Buffer`

// to enable drag and drop

// to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.

// to report a different scrollHeight depending on whether the last line

// to the first/last tabbable element inside the focus trap

// to the input and to support wrapping tags..

// to the result

// to their upper/lower bounds if the value passed is out of range.

// to work around IE not supporting custom drag previews.

// todo: findできなかったケースのハンドリング

// todo: 全ての量子操作に対してメソッドを個別に用意するのは冗長だが、switch文が伸びるのも読みづらいので、ある程度の粒度で分けたい

// touch-action will be supported

// trailing edge, the system time has gone backwards and we're treating

// transition css properties(dash case), optional

// translateX(0) is a workaround for Safari transform scale bug

// trigger 60fps

// triggered.

// true if both NaN, false otherwise

// truncate already-completed tasks.

// try {

// types.

// unbounded. To prevent memory exhaustion, the task queue will periodically

// undefined is handled specially as per ECMA-262 6th Edition,

// undefined on initial render

// under any circumstances.

// unexpected trail

// unpaired lead

// update animtaion

// update the collected properties after react renders.

// use case of https://github.com/emotion-js/emotion/issues/2675

// use parent's node as drag image. Neither works in IE though.

// use-case. If someone is subclassing a native class, it will be handled

// used to test whether a single value is comparable.

// valid lead

// valid surrogate pair

// w: the word of xd which contains the rounding digit, a base 1e7 number.

// want to crash if focus-visible malfunctioned?

// we can avoid capturing the string tag.

// we can cancel any pending setState callbacks after we unmount.

// we did not generate a valid codePoint so insert a

// we didn't create the domain from user's props above, so we need to calculate it

// we don't care about invariant's own frame

// we only need to add the styles to the registered cache if the

// we want drag drop operation to start

// we'll need to consider how to pull off dev-tooling

// webpackBootstrap

// when it's hidden.

// when modal was unmounted before modalRef gets null

// when reviewing comparable libraries in the wild this order

// where the user has an older version of dnd-core like in

// where to trim.  This should not happen :tm:

// where x = (y - 1)/(y + 1)    (|x| < 1)

// whether or not is barSize setted by user

// whether there actually is a target before firing `hover`.

// which are basically components used as a selectors.

// which is necessary in order to transition styles when adding a class name.

// which points to Object.

// while the component is disabled.

// will abruptly end the dragging, which is not obvious.

// will receive the previous state. This effectively populates

// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1".

// with the string tag comparison.

// workers, we enlist an interval handle that will try to fire

// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.

// would be better than imposing the 4ms delay of timers.

// x % 0 = NaN

// x = x / 2^5

// x and y are finite, non-zero numbers with the same sign.

// x and y are non-zero numbers with the same sign.

// x is reduced to a value near 1.

// xdi: the index of w within xd.

// yes, i know these hooks are used conditionally

// }

// ⚠️ sticky is not supported by IE11.

// テンソル積の左側の量子ビット数

// マージ前に、マージによってQuantumStateの更新が必要なmapElementをリスト化する

// メモ：上手いことrequestOperationと引数が異なっても扱えないか……

// 単一量子ビットなので常にlength = 1

// 厳密にはcloneではないが、qramanaでnormalizeされていないQStateを利用するケースは無い

// 回転角を引数として必要とする操作は引数が異なるので分ける

// 如果是bar，计算bar的位置

// 新しいQuantumStateを、古いQuantumStateを参照しているQubitQuantumStateMapElementに適用する

//# sourceMappingURL=AsapQueue.js.map

//# sourceMappingURL=DndContext.js.map

//# sourceMappingURL=DndProvider.js.map

//# sourceMappingURL=DragDropManagerImpl.js.map

//# sourceMappingURL=DragDropMonitorImpl.js.map

//# sourceMappingURL=DragSourceImpl.js.map

//# sourceMappingURL=DragSourceMonitorImpl.js.map

//# sourceMappingURL=DropTargetImpl.js.map

//# sourceMappingURL=DropTargetMonitorImpl.js.map

//# sourceMappingURL=EnterLeaveCounter.js.map

//# sourceMappingURL=HTML5BackendImpl.js.map

//# sourceMappingURL=HandlerRegistryImpl.js.map

//# sourceMappingURL=MonotonicInterpolant.js.map

//# sourceMappingURL=NativeDragSource.js.map

//# sourceMappingURL=OffsetUtils.js.map

//# sourceMappingURL=OptionsReader.js.map

//# sourceMappingURL=RawTask.js.map

//# sourceMappingURL=SourceConnector.js.map

//# sourceMappingURL=TargetConnector.js.map

//# sourceMappingURL=TaskFactory.js.map

//# sourceMappingURL=asap.js.map

//# sourceMappingURL=beginDrag.js.map

//# sourceMappingURL=connectors.js.map

//# sourceMappingURL=contracts.js.map

//# sourceMappingURL=coords.js.map

//# sourceMappingURL=createDragDropManager.js.map

//# sourceMappingURL=dirtiness.js.map

//# sourceMappingURL=dirtyHandlerIds.js.map

//# sourceMappingURL=dragOffset.js.map

//# sourceMappingURL=dragOperation.js.map

//# sourceMappingURL=drop.js.map

//# sourceMappingURL=dynamic.js.map

//# sourceMappingURL=endDrag.js.map

//# sourceMappingURL=equality.js.map

//# sourceMappingURL=getDataFromDataTransfer.js.map

//# sourceMappingURL=hover.js.map

//# sourceMappingURL=index.esm.mjs.map

//# sourceMappingURL=index.js.map

//# sourceMappingURL=index.mjs.map

//# sourceMappingURL=isRef.js.map

//# sourceMappingURL=js_utils.js.map

//# sourceMappingURL=loadable.shared-runtime.js.map

//# sourceMappingURL=makeRequestCall.js.map

//# sourceMappingURL=matchesType.js.map

//# sourceMappingURL=nativeTypesConfig.js.map

//# sourceMappingURL=publishDragSource.js.map

//# sourceMappingURL=refCount.js.map

//# sourceMappingURL=registration.js.map

//# sourceMappingURL=registry.js.map

//# sourceMappingURL=setClientOffset.js.map

//# sourceMappingURL=stateId.js.map

//# sourceMappingURL=useAccept.js.map

//# sourceMappingURL=useCollectedProps.js.map

//# sourceMappingURL=useCollector.js.map

//# sourceMappingURL=useDrag.js.map

//# sourceMappingURL=useDragDropManager.js.map

//# sourceMappingURL=useDragSource.js.map

//# sourceMappingURL=useDragSourceConnector.js.map

//# sourceMappingURL=useDragSourceMonitor.js.map

//# sourceMappingURL=useDragType.js.map

//# sourceMappingURL=useDrop.js.map

//# sourceMappingURL=useDropTarget.js.map

//# sourceMappingURL=useDropTargetConnector.js.map

//# sourceMappingURL=useDropTargetMonitor.js.map

//# sourceMappingURL=useIsomorphicLayoutEffect.js.map

//# sourceMappingURL=useMonitorOutput.js.map

//# sourceMappingURL=useOptionalFactory.js.map

//# sourceMappingURL=useRegisteredDragSource.js.map

//# sourceMappingURL=useRegisteredDropTarget.js.map

//# sourceMappingURL=wrapConnectorHooks.js.map

//--------------

//////////                                 //////////

//////////      ZodDiscriminatedUnion      //////////

/////////////////////////////////////////////////////

//while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {
